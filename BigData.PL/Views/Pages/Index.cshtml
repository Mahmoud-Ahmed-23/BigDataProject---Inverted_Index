@{
    ViewData["Title"] = "Search Engine";
    var query = ViewData["Query"] as string;
    var results = ViewData["Results"] as List<string>;
}

<div class="search-engine-container">
    <div class="search-engine-wrapper">
        <!-- Header Section -->
        <div class="search-engine-header">
            <div class="logo-animation">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <circle cx="11" cy="11" r="8" class="logo-circle"></circle>
                    <line x1="21" y1="21" x2="16.65" y2="16.65" class="logo-line"></line>
                </svg>
            </div>
            <h1 class="gradient-text">Discover Everything</h1>
            <p class="subtitle">Intelligent search for the modern web</p>
        </div>

        <!-- Search Form -->
        <form method="get" action="@Url.Action("Search", "Pages")" class="search-engine-form">
            <div class="search-input-container">
                <input type="text" id="query" name="query"
                       class="search-engine-input"
                       value="@query"
                       placeholder="Search for anything..."
                       autocomplete="off"
                       aria-label="Search input">
                <button type="submit" class="search-engine-button">
                    <span>Search</span>
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <circle cx="11" cy="11" r="8"></circle>
                        <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                    </svg>
                </button>
            </div>
        </form>

        <!-- Quick Suggestions -->
        <div class="quick-suggestions">
            <span>Try searching for:</span>
            <div class="suggestion-tags">
                <a href="@Url.Action("Search", "Pages", new { query = "free" })" class="tag">free</a>
                <a href="@Url.Action("Search", "Pages", new { query = "web development" })" class="tag">web development</a>
                <a href="@Url.Action("Search", "Pages", new { query = "data science" })" class="tag">data science</a>
                <a href="@Url.Action("Search", "Pages", new { query = "AI" })" class="tag">AI</a>
            </div>
        </div>

        <!-- Results Section -->
        @if (results != null)
        {
            <div class="search-results-container">
                <div class="results-header">
                    <h2>Results for "<span>@query</span>"</h2>
                    <div class="results-count">@results.Count @(results.Count == 1 ? "result" : "results") found</div>
                </div>

                @if (results.Any())
                {
                    <div class="results-list">
                        @foreach (var url in results)
                        {
                            <div class="result-item">
                                <a href="@Url.Action("ShowPageContent", "Pages", new { url = url, word = query })" target="_blank" class="result-link">
                                    <div class="result-url">@url</div>
                                    <h3 class="result-title">@System.IO.Path.GetFileNameWithoutExtension(url)</h3>
                                    <p class="result-snippet">Relevant content about @query from this source...</p>
                                </a>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="no-results">
                        <svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <circle cx="12" cy="12" r="10"></circle>
                            <line x1="4.93" y1="4.93" x2="19.07" y2="19.07"></line>
                        </svg>
                        <h3>No results found for "@query"</h3>
                        <p>Try different keywords or check your spelling</p>
                    </div>
                }
            </div>
        }
    </div>
</div>

<style>
    :root {
        --primary-color: #6c5ce7;
        --primary-light: #a29bfe;
        --secondary-color: #fd79a8;
        --accent-color: #00cec9;
        --dark-bg: #1a1a2e;
        --darker-bg: #16213e;
        --light-text: #f8f9fa;
        --gray-text: #636e72;
        --card-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        --border-radius: 16px;
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        background-color: var(--dark-bg);
        color: var(--light-text);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        line-height: 1.6;
    }

    .search-engine-container {
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 2rem;
        background: radial-gradient(circle at center, var(--dark-bg) 0%, #0f0f1a 100%);
    }

    .search-engine-wrapper {
        max-width: 800px;
        width: 100%;
        background: var(--darker-bg);
        border-radius: var(--border-radius);
        box-shadow: var(--card-shadow);
        padding: 3rem;
        border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .search-engine-header {
        margin-bottom: 2.5rem;
        text-align: center;
    }

    .logo-animation {
        margin: 0 auto 1.5rem;
        width: 80px;
        height: 80px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: linear-gradient(135deg, var(--primary-color), var(--accent-color));
        border-radius: 50%;
        color: white;
        box-shadow: 0 5px 20px rgba(108, 92, 231, 0.4);
        animation: float 6s ease-in-out infinite;
    }

        .logo-animation svg {
            width: 40px;
            height: 40px;
        }

    .logo-circle {
        animation: pulse 2s infinite alternate;
    }

    .logo-line {
        animation: draw 1.5s ease-in-out infinite alternate;
    }

    h1 {
        font-size: 2.5rem;
        margin-bottom: 0.5rem;
        font-weight: 700;
    }

    .gradient-text {
        background: linear-gradient(to right, var(--primary-light), var(--accent-color));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .subtitle {
        color: var(--primary-light);
        font-size: 1.1rem;
        opacity: 0.8;
    }

    .search-engine-form {
        margin-bottom: 2rem;
    }

    .search-input-container {
        display: flex;
        border-radius: 50px;
        overflow: hidden;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);
        border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .search-engine-input {
        flex: 1;
        padding: 1.2rem 1.5rem;
        border: none;
        font-size: 1.1rem;
        outline: none;
        background: rgba(255, 255, 255, 0.05);
        color: var(--light-text);
    }

        .search-engine-input::placeholder {
            color: var(--gray-text);
        }

    .search-engine-button {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0 2rem;
        background: linear-gradient(135deg, var(--primary-color), var(--accent-color));
        color: white;
        border: none;
        cursor: pointer;
        font-weight: 600;
        font-size: 1.1rem;
        transition: all 0.3s ease;
    }

        .search-engine-button:hover {
            background: linear-gradient(135deg, var(--accent-color), var(--primary-color));
            transform: translateY(-1px);
        }

        .search-engine-button svg {
            width: 18px;
            height: 18px;
        }

    .quick-suggestions {
        color: var(--primary-light);
        font-size: 0.9rem;
        opacity: 0.8;
        margin-bottom: 2rem;
    }

    .suggestion-tags {
        display: flex;
        gap: 0.5rem;
        justify-content: center;
        margin-top: 1rem;
        flex-wrap: wrap;
    }

    .tag {
        display: inline-block;
        padding: 0.4rem 1rem;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 50px;
        color: var(--light-text);
        text-decoration: none;
        font-size: 0.9rem;
        transition: all 0.2s ease;
        border: 1px solid rgba(255, 255, 255, 0.1);
    }

        .tag:hover {
            background: rgba(255, 255, 255, 0.2);
            color: var(--accent-color);
            transform: translateY(-2px);
        }

    .search-results-container {
        margin-top: 2rem;
        animation: fadeIn 0.5s ease-out;
    }

    .results-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1.5rem;
        padding-bottom: 0.5rem;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

        .results-header h2 {
            font-size: 1.3rem;
            color: var(--light-text);
        }

            .results-header h2 span {
                color: var(--accent-color);
            }

    .results-count {
        font-size: 0.9rem;
        color: var(--gray-text);
    }

    .results-list {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .result-item {
        background: rgba(255, 255, 255, 0.03);
        border-radius: 8px;
        padding: 1.5rem;
        transition: all 0.3s ease;
        border: 1px solid rgba(255, 255, 255, 0.05);
    }

        .result-item:hover {
            background: rgba(255, 255, 255, 0.06);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

    .result-link {
        text-decoration: none;
        color: inherit;
    }

    .result-url {
        font-size: 0.8rem;
        color: var(--accent-color);
        margin-bottom: 0.5rem;
        word-break: break-all;
    }

    .result-title {
        font-size: 1.1rem;
        color: var(--light-text);
        margin-bottom: 0.5rem;
        font-weight: 600;
    }

    .result-snippet {
        font-size: 0.9rem;
        color: var(--gray-text);
        line-height: 1.5;
    }

    .no-results {
        text-align: center;
        padding: 2rem;
        color: var(--gray-text);
    }

        .no-results svg {
            margin-bottom: 1rem;
            color: var(--secondary-color);
            opacity: 0.7;
        }

        .no-results h3 {
            margin-bottom: 0.5rem;
            color: var(--light-text);
        }

    /* Animations */
    @@keyframes float {
        0% {
            transform: translateY(0px);
        }

        50% {
            transform: translateY(-10px);
        }

        100% {
            transform: translateY(0px);
        }
    }

    @@keyframes pulse {
        0% {
            r: 8;
        }

        100% {
            r: 7.5;
        }
    }

    @@keyframes draw {
        0% {
            opacity: 0.7;
            stroke-width: 1.5;
        }

        100% {
            opacity: 1;
            stroke-width: 2.5;
        }
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .search-engine-wrapper {
            padding: 2rem 1.5rem;
        }

        h1 {
            font-size: 2rem;
        }

        .search-input-container {
            flex-direction: column;
            border-radius: 12px;
        }

        .search-engine-input {
            border-radius: 12px 12px 0 0 !important;
        }

        .search-engine-button {
            justify-content: center;
            padding: 1rem;
            border-radius: 0 0 12px 12px !important;
        }

        .results-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.5rem;
        }
    }
</style>