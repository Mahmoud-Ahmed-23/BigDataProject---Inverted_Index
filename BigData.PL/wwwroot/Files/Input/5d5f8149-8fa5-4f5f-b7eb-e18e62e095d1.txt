Type of logical formula
In mathematical logic and logic programming  a Horn clause is a logical formula of a particular rule like form that gives it useful properties for use in logic programming  formal specification  universal algebra and model theory  Horn clauses are named for the logician Alfred Horn  who first pointed out their significance in                 


Definition edit 
A Horn clause is a disjunctive clause  a disjunction of literals  with at most one positive  i e  unnegated  literal  
Conversely  a disjunction of literals with at most one negated literal is called a dual Horn clause  
A Horn clause with exactly one positive literal is a definite clause or a strict Horn clause             a definite clause with no negative literals is a unit clause             and a unit clause without variables is a fact            
a Horn clause without a positive literal is a goal clause 
The empty clause  consisting of no literals  which is equivalent to false   is a goal clause 
These three kinds of Horn clauses are illustrated in the following propositional example 




Type of Horn clause

Disjunction form

Implication form

Read intuitively as


Definite clause

 p    q          t   u

u   p   q         t

assume that if p and q and     and t all hold  then also u holds


Fact

u

u   true

assume thatu holds


Goal clause

 p    q          t

false   p   q         t

show   thatp and q and     and t all hold           

All variables in a clause are implicitly universally quantified with the scope being the entire clause  Thus  for example 

  human X    mortal X 
stands for 

 X    human X    mortal X    
which is logically equivalent to 

 X   human X    mortal X    
Significance edit 
Horn clauses play a basic role in constructive logic and computational logic  They are important in automated theorem proving by first order resolution  because the resolvent of two Horn clauses is itself a Horn clause  and the resolvent of a goal clause and a definite clause is a goal clause  These properties of Horn clauses can lead to greater efficiency of proving a theorem  the goal clause is the negation of this theorem  see Goal clause in the above table  Intuitively  if we wish to prove    we assume     the goal  and check whether such assumption leads to a contradiction  If so  then   must hold  This way  a mechanical proving tool needs to maintain only one set of formulas  assumptions   rather than two sets  assumptions and  sub goals  
Propositional Horn clauses are also of interest in computational complexity  The problem of finding truth value assignments to make a conjunction of propositional Horn clauses true is known as HORNSAT  This problem is P complete and solvable in linear time             In contrast  the unrestricted Boolean satisfiability problem is an NP complete problem 
In universal algebra  definite Horn clauses are generally called quasi identities  classes of algebras definable by a set of quasi identities  are called quasivarieties and enjoy some of the good properties of the more restrictive notion of a variety  i e   an equational class             From the model theoretical point of view  Horn sentences are important since they are exactly  up to logical equivalence  those sentences preserved under reduced products  in particular  they are preserved under direct products  On the other hand  there are sentences that are not Horn but are nevertheless preserved under arbitrary direct products            

Logic programming edit 
Horn clauses are also the basis of logic programming  where it is common to write definite clauses in the form of an implication 

 p   q         t    u
In fact  the resolution of a goal clause with a definite clause to produce a new goal clause is the basis of the SLD resolution inference rule  used in implementation of the logic programming language Prolog 
In logic programming  a definite clause behaves as a goal reduction procedure  For example  the Horn clause written above behaves as the procedure 

to show u  show p and show q and     and show t 
To emphasize this reverse use of the clause  it is often written in the reverse form 

u    p   q         t 
In Prolog this is written as 

u    p  q       t 

In logic programming  a goal clause  which has the logical form

 X  false   p   q         t 
represents the negation of a problem to be solved  The problem itself is an existentially quantified conjunction of positive literals 

 X  p   q         t 
The Prolog notation does not have explicit quantifiers and is written in the form 

   p  q       t 

This notation is ambiguous in the sense that it can be read either as a statement of the problem or as a statement of the denial of the problem  However  both readings are correct  In both cases  solving the problem amounts to deriving the empty clause  In Prolog notation this is equivalent to deriving 

   true 

If the top level goal clause is read as the denial of the problem  then the empty clause represents false and the proof of the empty clause is a refutation of the denial of the problem  If the top level goal clause is read as the problem itself  then the empty clause represents true  and the proof of the empty clause is a proof that the problem has a solution  
The solution of the problem is a substitution of terms for the variables X in the top level goal clause  which can be extracted from the resolution proof   Used in this way  goal clauses are similar to conjunctive queries in relational databases  and Horn clause logic is equivalent in computational power to a universal Turing machine  
Van Emden and Kowalski        investigated the model theoretic properties of Horn clauses in the context of logic programming  showing that every set of definite clauses D has a unique minimal model M  An atomic formula A is logically implied by D if and only if A is true in M  It follows that a problem P represented by an existentially quantified conjunction of positive literals is logically implied by D if and only if P is true in M  The minimal model semantics of Horn clauses is the basis for the stable model semantics of logic programs            

See also edit 
Constrained Horn clauses
Propositional calculus
Notes edit 


  Horn      

  Makowsky      

  Buss      

  Lau  amp  Ornaghi      

  Like in resolution theorem proving   show    and  assume     are synonymous  indirect proof   they both correspond to the same formula  viz     

  Dowling  amp  Gallier      

  Burris  amp  Sankappanavar      

  Chang  amp  Keisler       Section     

  van Emden  amp  Kowalski      


References edit 
Burris  Stanley  Sankappanavar  H P   eds          A Course in Universal Algebra  Springer Verlag  ISBN                    
Buss  Samuel R           An Introduction to Proof Theory   In Samuel R  Buss  ed    Handbook of Proof Theory  Studies in Logic and the Foundations of Mathematics  Vol            Elsevier B V  pp             doi         S        X             ISBN                         ISSN              X 
Chang  Chen Chung  Keisler  H  Jerome                Model Theory  Studies in Logic and the Foundations of Mathematics   rd      ed    Elsevier  ISBN                        
Dowling  William F   Gallier  Jean H           Linear time algorithms for testing the satisfiability of propositional Horn formulae   Journal of Logic Programming                  doi                              
van Emden  M  H   Kowalski  R  A           The semantics of predicate logic as a programming language   PDF   Journal of the ACM                   CiteSeerX                      doi                        S CID               
Horn  Alfred          On sentences which are true of direct unions of algebras   Journal of Symbolic Logic                 doi                  JSTOR               S CID               
Lau  Kung Kiu  Ornaghi  Mario          Specifying Compositional Units for Correct Program Development in Computational Logic   Program Development in Computational Logic  Lecture Notes in Computer Science  Vol             pp             doi                              ISBN                        
Makowsky  J A           Why Horn Formulas Matter in Computer Science  Initial Structures and Generic Examples   PDF   Journal of Computer and System Sciences                     doi                              
vteNormal forms in logicPropositional logic
Negation normal form
Conjunctive normal form
Disjunctive normal form
Algebraic normal form  Zhegalkin polynomial 
Blake canonical form
Canonical normal form
Horn clause
Predicate logic
Skolem normal form
Herbrandization
Prenex normal form
Other
Beta normal form
Modal clausal form
Normal form  natural deduction 






Retrieved from  https   en wikipedia org w index php title Horn clause amp oldid