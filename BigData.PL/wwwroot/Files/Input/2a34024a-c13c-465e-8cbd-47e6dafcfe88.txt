Language for reasoning and representing events
The event calculus is a logical theory for representing and reasoning about events and about the way in which they change the state of some real or artificial world  It deals both with action events  which are performed by agents  and with external events  which are outside the control of any agent 
The event calculus represents the state of the world at any time by the set of all the facts  called fluents  that hold at the time  Events initiate and terminate fluents 


A fluent holds at a time 
if the fluent is initiated by an event that happens at an earlier time
and the fluent is not terminated by any event that happens in the meantime      citation needed     


The event calculus differs from most other approaches for reasoning about change by reifying time  associating events with the time at which they happen  and associating fluents with the times at which they hold 
The original version of the event calculus  introduced by Robert Kowalski and Marek Sergot in                  was formulated as a logic program and developed for representing narratives and database updates             Kave Eshghi showed how to use the event calculus for planning             by using abduction to generate hypothetical actions to achieve a desired state of affairs 
It was extended by Murray Shanahan and Rob Miller in the     s            and reformulated in first order logic with circumscription 
These and later extensions have been used to formalize non deterministic actions  concurrent actions  actions with delayed effects  gradual changes  actions with duration  continuous change  and non inertial fluents 
Van Lambalgen and Hamm showed how a formulation of the event calculus as a constraint logic program can be used to give an algorithmic semantics to tense and aspect in natural language            


Fluents and events edit 
This section does not cite any sources  Please help improve this section by adding citations to reliable sources  Unsourced material may be challenged and removed    January        Learn how and when to remove this message 
In the event calculus  fluents are reified  This means that fluents are represented by terms  For example  
  
    
      
        
          
            h
            o
            l
            d
            s
            A
            t
          
        
         
        o
        n
         
        g
        r
        e
        e
        n
          x f 
        b
        l
        o
        c
        k
         
        t
        a
        b
        l
        e
         
         
         
         
      
    
      displaystyle   mathit  holdsAt   on green  block table     
  
 expresses that the 
  
    
      
        
          
            g
            r
            e
            e
            n
              x f 
            b
            l
            o
            c
            k
          
        
      
    
      displaystyle   mathit  green  block   
  
 is on the 
  
    
      
        
          
            t
            a
            b
            l
            e
          
        
      
    
      displaystyle   mathit  table   
  
 at time 
  
    
      
         
      
    
      displaystyle   
  
  Here 
  
    
      
        
          
            h
            o
            l
            d
            s
            A
            t
          
        
      
    
      displaystyle   mathit  holdsAt   
  
 is a predicate  while 
  
    
      
        
          
            o
            n
             
            g
            r
            e
            e
            n
              x f 
            b
            l
            o
            c
            k
             
            t
            a
            b
            l
            e
             
          
        
      
    
      displaystyle   mathit  on green  block table    
  
 is a term  In general  the atomic formula


  
    
      
        
          
            h
            o
            l
            d
            s
            A
            t
          
        
         
        f
        l
        u
        e
        n
        t
         
        t
        i
        m
        e
         
      
    
      displaystyle   mathit  holdsAt   fluent time  
  
 expresses that the 
  
    
      
        
          
            f
            l
            u
            e
            n
            t
          
        
      
    
      displaystyle   mathit  fluent   
  
 holds at the 
  
    
      
        
          
            t
            i
            m
            e
             
          
        
      
    
      displaystyle   mathit  time    
  

Events are also reified and represented by terms  For example  
  
    
      
        
          
            h
            a
            p
            p
            e
            n
            s
            A
            t
          
        
         
        m
        o
        v
        e
         
        g
        r
        e
        e
        n
          x f 
        b
        l
        o
        c
        k
         
        r
        e
        d
          x f 
        b
        l
        o
        c
        k
         
         
         
         
      
    
      displaystyle   mathit  happensAt   move green  block red  block     
  
 expresses that the 
  
    
      
        
          
            g
            r
            e
            e
            n
              x f 
            b
            l
            o
            c
            k
          
        
      
    
      displaystyle   mathit  green  block   
  
 is moved onto the 
  
    
      
        
          
            r
            e
            d
              x f 
            b
            l
            o
            c
            k
             
          
        
      
    
      displaystyle   mathit  red  block    
  
 at time 
  
    
      
         
      
    
      displaystyle   
  
  In general 


  
    
      
        
          
            h
            a
            p
            p
            e
            n
            s
            A
            t
          
        
         
        e
        v
        e
        n
        t
         
        t
        i
        m
        e
         
      
    
      displaystyle   mathit  happensAt   event time  
  
 expresses that the 
  
    
      
        
          
            e
            v
            e
            n
            t
          
        
      
    
      displaystyle   mathit  event   
  
 happens at the 
  
    
      
        
          
            t
            i
            m
            e
             
          
        
      
    
      displaystyle   mathit  time    
  

The relationships between events and the fluents that they initiate and terminate are also represented by atomic formulae 


  
    
      
        
          
            i
            n
            i
            t
            i
            a
            t
            e
            s
          
        
         
        e
        v
        e
        n
        t
         
        f
        l
        u
        e
        n
        t
         
        t
        i
        m
        e
         
      
    
      displaystyle   mathit  initiates   event fluent time  
  
 expresses that if the 
  
    
      
        
          
            e
            v
            e
            n
            t
          
        
      
    
      displaystyle   mathit  event   
  
 happens at the 
  
    
      
        
          
            t
            i
            m
            e
          
        
      
    
      displaystyle   mathit  time   
  
 then the 
  
    
      
        
          
            f
            l
            u
            e
            n
            t
          
        
      
    
      displaystyle   mathit  fluent   
  
 becomes true after the 
  
    
      
        
          
            t
            i
            m
            e
          
        
      
    
      displaystyle   mathit  time   
  
 

  
    
      
        
          
            t
            e
            r
            m
            i
            n
            a
            t
            e
            s
          
        
         
        e
        v
        e
        n
        t
         
        f
        l
        u
        e
        n
        t
         
        t
        i
        m
        e
         
      
    
      displaystyle   mathit  terminates   event fluent time  
  
 expresses that if the 
  
    
      
        
          
            e
            v
            e
            n
            t
          
        
      
    
      displaystyle   mathit  event   
  
 happens at the 
  
    
      
        
          
            t
            i
            m
            e
          
        
      
    
      displaystyle   mathit  time   
  
 then the 
  
    
      
        
          
            f
            l
            u
            e
            n
            t
          
        
      
    
      displaystyle   mathit  fluent   
  
 ceases to be true after the 
  
    
      
        
          
            t
            i
            m
            e
          
        
      
    
      displaystyle   mathit  time   
  
 
Domain independent axiom edit 
The event calculus was developed in part as an alternative to the situation calculus                        as a solution to the frame problem  of representing and reasoning about the way in which actions and other events change the state of some world 
There are many variants of the event calculus  But the core axiom of one of the simplest and most useful variants can be expressed as a single  domain independent axiom 


  
    
      
        
          
            h
            o
            l
            d
            s
            A
            t
          
        
         
        F
         
        T
         
         
          x     
      
    
      displaystyle   mathit  holdsAt   F T   leftarrow  
  


  
    
      
         
        
          
            h
            a
            p
            p
            e
            n
            s
            A
            t
          
        
         
        E
         
         
        T
         
         
          x     
        
          
            i
            n
            i
            t
            i
            a
            t
            e
            s
          
        
         
        E
         
         
        F
         
        T
         
         
          x     
         
        T
         
         lt 
        T
         
         
          x     
      
    
      displaystyle    mathit  happensAt   E  T   wedge   mathit  initiates   E  F T   wedge  T  lt T   wedge  
  


  
    
      
          xac 
          x     
        E
         
         
        T
         
        
          
            h
            a
            p
            p
            e
            n
            s
            A
            t
          
        
         
        E
         
         
        T
         
          x     
        
          
            t
            e
            r
            m
            i
            n
            a
            t
            e
            s
          
        
         
        E
         
         
        F
         
        T
         
          x     
         
        T
         
          x     
        T
         lt 
        T
         
         
         
      
    
      displaystyle  neg  exists E  T   mathit  happensAt   E  T  wedge   mathit  terminates   E  F T  wedge  T  leq T lt T    
  

The axiom states that

a fluent 
  
    
      
        F
      
    
      displaystyle F 
  
  holds at a time 
  
    
      
        T
         
      
    
      displaystyle T  
  
 if
an event 
  
    
      
        E
         
      
    
      displaystyle E  
  
 happens at a time 
  
    
      
        T
         
      
    
      displaystyle T  
  
 and

  
    
      
        E
         
      
    
      displaystyle E  
  
 initiates 
  
    
      
        F
      
    
      displaystyle F 
  
 at 
  
    
      
        T
         
      
    
      displaystyle T  
  
 and

  
    
      
        T
         
      
    
      displaystyle T  
  
 is before  
  
    
      
        T
         
      
    
      displaystyle T  
  
 and
it is not the case that there exists an event 
  
    
      
        E
         
      
    
      displaystyle E  
  
 and a time 
  
    
      
        T
      
    
      displaystyle T 
  
 such that

  
    
      
        E
         
      
    
      displaystyle E  
  
 happens at 
  
    
      
        T
      
    
      displaystyle T 
  
 and

  
    
      
        E
         
      
    
      displaystyle E  
  
 terminates 
  
    
      
        F
      
    
      displaystyle F 
  
 at 
  
    
      
        T
      
    
      displaystyle T 
  
 and

  
    
      
        T
         
      
    
      displaystyle T  
  
 is before or at the same time as 
  
    
      
        T
      
    
      displaystyle T 
  
 and

  
    
      
        T
      
    
      displaystyle T 
  
 is before 
  
    
      
        T
         
      
    
      displaystyle T  
  
 
The event calculus solves the frame problem by interpreting this axiom in a non monotonic logic  such as first order logic with circumscription            or  as a logic program  in Horn clause logic with negation as failure             In fact  circumscription is one of the several semantics that can be given to negation as failure             and it is closely related to the completion semantics for logic programs              which interprets if  as if and only if  
The core event calculus axiom defines the 
  
    
      
        h
        o
        l
        d
        s
        A
        t
      
    
      displaystyle holdsAt 
  
  predicate in terms of the 
  
    
      
        h
        a
        p
        p
        e
        n
        s
        A
        t
      
    
      displaystyle happensAt 
  
  
  
    
      
        i
        n
        i
        t
        i
        a
        t
        e
        s
      
    
      displaystyle initiates 
  
  
  
    
      
        t
        e
        r
        m
        i
        n
        a
        t
        e
        s
      
    
      displaystyle terminates 
  
  
  
    
      
         lt 
      
    
      displaystyle  lt  
  
 and 
  
    
      
          x     
      
    
      displaystyle  leq  
  
 predicates  To apply the event calculus to  a particular problem  these other predicates also need to be defined 
The event calculus is compatible with different definitions of the temporal predicates 
  
    
      
         lt 
      
    
      displaystyle  lt  
  
 and 
  
    
      
          x     
      
    
      displaystyle  leq  
  
  In most applications  times are represented discretely  by the natural numbers  or continuously  by non negative real numbers  However  times can also be partially ordered 

Domain dependent axioms edit 
This section does not cite any sources  Please help improve this section by adding citations to reliable sources  Unsourced material may be challenged and removed    January        Learn how and when to remove this message 
To apply the event calculus in a particular problem domain  it is necessary to define the 
  
    
      
        i
        n
        i
        t
        i
        a
        t
        e
        s
      
    
      displaystyle initiates 
  
 and 
  
    
      
        t
        e
        r
        m
        i
        n
        a
        t
        e
        s
      
    
      displaystyle terminates 
  
 predicates for that domain  For example  in the blocks world domain  an event 
  
    
      
        m
        o
        v
        e
         
        O
        b
        j
        e
        c
        t
         
        P
        l
        a
        c
        e
         
      
    
      displaystyle move Object Place  
  
 of moving an object onto a place intitiates the fluent 
  
    
      
        o
        n
         
        O
        b
        j
        e
        c
        t
         
        P
        l
        a
        c
        e
         
      
    
      displaystyle on Object Place  
  
  which expresses that the object is on the place and terminates the fluent 
  
    
      
        o
        n
         
        O
        b
        j
        e
        c
        t
         
        P
        l
        a
        c
        e
         
         
      
    
      displaystyle on Object Place   
  
  which expresses that the object is on a different place 


  
    
      
        
          
            i
            n
            i
            t
            i
            a
            t
            e
            s
          
        
         
        m
        o
        v
        e
         
        O
        b
        j
        e
        c
        t
         
        P
        l
        a
        c
        e
         
         
        o
        n
         
        O
        b
        j
        e
        c
        t
         
        P
        l
        a
        c
        e
         
         
        T
        i
        m
        e
         
         
      
    
      displaystyle   mathit  initiates   move Object Place  on Object Place  Time   
  


  
    
      
        
          
            t
            e
            r
            m
            i
            n
            a
            t
            e
            s
          
        
         
        m
        o
        v
        e
         
        O
        b
        j
        e
        c
        t
         
        P
        l
        a
        c
        e
         
         
        o
        n
         
        O
        b
        j
        e
        c
        t
         
        P
        l
        a
        c
        e
         
         
         
        T
        i
        m
        e
         
          x     
        d
        i
        f
        f
        e
        r
        e
        n
        t
         
        P
        l
        a
        c
        e
         
         
        P
        l
        a
        c
        e
         
         
      
    
      displaystyle   mathit  terminates   move Object Place  on Object Place   Time  leftarrow different Place  Place   
  

If we want to represent the fact that a 
  
    
      
        F
        l
        u
        e
        n
        t
      
    
      displaystyle Fluent 
  
 holds in an initial state  say at time    then with the simple core axiom above we need an event  say 
  
    
      
        i
        n
        i
        t
        i
        a
        l
        i
        s
        e
         
        F
        l
        u
        e
        n
        t
         
      
    
      displaystyle initialise Fluent  
  
  which initiates the 
  
    
      
        F
        l
        u
        e
        n
        t
      
    
      displaystyle Fluent 
  
 at any time 


  
    
      
        
          
            i
            n
            i
            t
            i
            a
            t
            e
            s
          
        
         
        i
        n
        i
        t
        i
        a
        l
        i
        s
        e
         
        F
        l
        u
        e
        n
        t
         
         
        F
        l
        u
        e
        n
        t
         
        T
        i
        m
        e
         
         
      
    
      displaystyle   mathit  initiates   initialise Fluent  Fluent Time   
  

Problem dependent axioms edit 
This section does not cite any sources  Please help improve this section by adding citations to reliable sources  Unsourced material may be challenged and removed    January        Learn how and when to remove this message 
To apply the event calculus  given the definitions of the 
  
    
      
        h
        o
        l
        d
        s
        A
        t
      
    
      displaystyle holdsAt 
  
  
  
    
      
        i
        n
        i
        t
        i
        a
        t
        e
        s
      
    
      displaystyle initiates 
  
  
  
    
      
        t
        e
        r
        m
        i
        n
        a
        t
        e
        s
      
    
      displaystyle terminates 
  
  
  
    
      
         lt 
      
    
      displaystyle  lt  
  
 and 
  
    
      
          x     
      
    
      displaystyle  leq  
  
 predicates  it is necessary to define the 
  
    
      
        h
        a
        p
        p
        e
        n
        s
        A
        t
      
    
      displaystyle happensAt 
  
 predicates that describe the specific context of the problem 
For example  in the blocks world domain  we might want to describe an initial state in which there are two blocks  a red block on a green block on a table  like a toy traffic light  followed by moving the red block to the table at time   and moving the green block onto the red block at time    turning the traffic light upside down 


  
    
      
        
          
            h
            a
            p
            p
            e
            n
            s
            A
            t
          
        
         
        i
        n
        i
        t
        i
        a
        l
        i
        s
        e
         
        o
        n
         
        r
        e
        d
          x f 
        b
        l
        o
        c
        k
         
        g
        r
        e
        e
        n
          x f 
        b
        l
        o
        c
        k
         
         
         
         
      
    
      displaystyle   mathit  happensAt   initialise on red  block green  block     
  


  
    
      
        
          
            h
            a
            p
            p
            e
            n
            s
            A
            t
          
        
         
        i
        n
        i
        t
        i
        a
        l
        i
        s
        e
         
        o
        n
         
        g
        r
        e
        e
        n
          x f 
        b
        l
        o
        c
        k
         
        t
        a
        b
        l
        e
         
         
         
         
      
    
      displaystyle   mathit  happensAt   initialise on green  block table     
  


  
    
      
        
          
            h
            a
            p
            p
            e
            n
            s
            A
            t
          
        
         
        m
        o
        v
        e
         
        r
        e
        d
          x f 
        b
        l
        o
        c
        k
         
        t
        a
        b
        l
        e
         
         
         
         
      
    
      displaystyle   mathit  happensAt   move red  block table     
  


  
    
      
        
          
            h
            a
            p
            p
            e
            n
            s
            A
            t
          
        
         
        m
        o
        v
        e
         
        g
        r
        e
        e
        n
          x f 
        b
        l
        o
        c
        k
         
        r
        e
        d
          x f 
        b
        l
        o
        c
        k
         
         
         
         
      
    
      displaystyle   mathit  happensAt   move green  block red  block     
  

A Prolog implementation edit 
This section does not cite any sources  Please help improve this section by adding citations to reliable sources  Unsourced material may be challenged and removed    January        Learn how and when to remove this message 
The event calculus has a natural implementation in pure Prolog  without any features that do not have a logical interpretation   For example  the blocks world scenario above can be implemented  with minor modifications  by the program 

holdsAt Fluent  Time      
    before Time   Time   
    happensAt Event  Time   
    initiates Event  Fluent  Time   
    not clipped Fluent  Time   Time    
        
clipped Fluent  Time   Time     
    terminates Event  Fluent  Time  
    happensAt Event  Time   
    before Time   Time  
    before Time  Time   

initiates initialise Fluent   Fluent  Time  
initiates move Object  Place   on Object  Place   Time  
terminates move Object  Place   on Object  Place    Time  

happensAt initialise on green block  table       
happensAt initialise on red block  green block       
happensAt move red block  table      
happensAt move green block  red block      

The Prolog program differs from the earlier formalisation in the following ways 

The core axiom has been rewritten  using an auxiliary predicate clipped Fact  Time   Time    This rewriting enables the elimination of existential quantifiers  conforming to the Prolog convention that all variables are universally quantified 
The order of the conditions in the body of the core axiom s  has been changed  to generate answers to queries in temporal order 
The equality in the condition 
  
    
      
        T
         
          x     
        T
      
    
      displaystyle T  leq T 
  
 has been removed from the corresponding condition before Time   Time   This builds in a simplifying assumption that events do not simultaneously initiate and terminate the same fluent  As a consequence  the definition of the  
  
    
      
        t
        e
        r
        m
        i
        n
        a
        t
        e
        s
      
    
      displaystyle terminates 
  
 predicate has been simplified by eliminating the condition that 
  
    
      
        d
        i
        f
        f
        e
        r
        e
        n
        t
         
        P
        l
        a
        c
        e
         
         
        P
        l
        a
        c
        e
         
      
    
      displaystyle different Place  Place  
  
 
Given an appropriate definition     note        of the predicate before Time   Time    the Prolog program generates all answers to the query what holds when  in temporal order 

   holdsAt Fluent  Time  
Fluent   on green block table       Time     
Fluent   on red block green block   Time     
Fluent   on green block table       Time     
Fluent   on red block table         Time     
Fluent   on green block table       Time     
Fluent   on red block table         Time     
Fluent   on red block table         Time     
Fluent   on green block red block   Time     
Fluent   on red block table         Time     
Fluent   on green block red block   Time     

The program can also answer negative queries  such as which fluents do not hold at which times  However  to work correctly  all variables in negative conditions must first be instantiated to terms containing no variables  For example 

timePoint    
timePoint    
timePoint    
timePoint    
timePoint    

fluent on red block  green block   
fluent on green block  red block   
fluent on red block  table   
fluent on green block  table   

   timePoint T   fluent F   not holdsAt F  T   
F   on green block red block    T     
F   on red block table          T     
F   on red block green block    T     
F   on green block red block    T     
F   on red block green block    T     
F   on green block red block    T     
F   on red block green block    T     
F   on green block table        T     
F   on red block green block    T     
F   on green block table        T     

Reasoning tools edit 
In addition to Prolog and its variants  several other tools for reasoning using the event calculus are also available 

Abductive Event Calculus Planners
Discrete Event Calculus Reasoner
Event Calculus Answer Set Programming
Reactive Event Calculus
Run Time Event Calculus  RTEC 
Epistemic Probabilistic Event Calculus  EPEC             
Extensions edit 
Notable extensions of the event calculus include Markov logic networks based variants             probabilistic              epistemic             and their combinations             

See also edit 
First order logic
Frame problem
Situation calculus
References edit 

  a b Kowalski  Robert  Sergot  Marek                A logic based calculus of events   New Generation Computing                doi         BF          ISSN                 S CID              

  Kowalski  Robert                Database updates in the event calculus   The Journal of Logic Programming                   doi                            Z  ISSN                

  Eshghi  Kave          Abductive planning with event calculus   Iclp SLP          

  Miller  Rob  Shanahan  Murray         Kakas  Antonis C   Sadri  Fariba  eds     Some Alternative Formulations of the Event Calculus   Computational Logic  Logic Programming and Beyond  Essays in Honour of Robert A  Kowalski Part II  Lecture Notes in Computer Science  Berlin  Heidelberg  Springer  pp                doi                           ISBN                         retrieved           

  Lambalgen  Hamm         The proper treatment of events  Malden  MA  Blackwell Pub  ISBN                         OCLC                

  J  McCarthy and P  Hayes         Some philosophical problems from the standpoint of artificial intelligence  In B  Meltzer and D  Michie  editors  Machine Intelligence              Edinburgh University Press       

  R  Reiter         The frame problem in the situation calculus  a simple solution  sometimes  and a completeness result for goal regression  In Vladimir Lifshitz  editor  Artificial intelligence and mathematical theory of computation  papers in honour of John McCarthy  pages          San Diego  CA  USA   Academic Press Professional  Inc       

  Shanahan  M         Solving the frame problem  A mathematical investigation of the common sense law of inertia  MIT Press 

  Gelfond  M   Przymusinska  H   Przymusinski  T           On the relationship between circumscription and negation as failure   Artificial Intelligence                 doi                              

  Clark  K L           Negation as Failure   Logic and Data Bases  Boston  MA  Springer US  pp                doi                               ISBN                        

  D Asaro  Fabio Aurelio  Bikakis  Antonis  Dickens  Luke  Miller  Rob          An answer set programming based implementation of epistemic probabilistic event calculus   International Journal of Approximate Reasoning               doi         j ijar              ISSN              X 

  Skarlatidis  Anastasios  Paliouras  Georgios  Artikis  Alexander  Vouros  George A                 Probabilistic Event Calculus for Event Recognition   ACM Transactions on Computational Logic                      arXiv            doi                  ISSN                 S CID              

  Skarlatidis  Anastasios  Artikis  Alexander  Filippou  Jason  Paliouras  Georgios  March         A probabilistic logic programming event calculus   Theory and Practice of Logic Programming                   arXiv            doi         S                  ISSN                 S CID              

  Ma  Jiefei  Miller  Rob  Morgenstern  Leora  Patkos  Theodore                An Epistemic Event Calculus for ASP based Reasoning About Knowledge of the Past  Present and Future   EPiC Series in Computing      EasyChair         doi          zswj 

  D Asaro  Fabio Aurelio  Bikakis  Antonis  Dickens  Luke  Miller  Rob                Probabilistic reasoning about epistemic action narratives   Artificial Intelligence               doi         j artint              ISSN                 S CID                


Further reading edit 
Brandano  S          The Event Calculus Assessed   IEEE TIME Symposium       
R  Kowalski and F  Sadri         Variants of the Event Calculus   ICLP        
Mueller  Erik T          Commonsense Reasoning  An Event Calculus Based Approach   nd Ed    Waltham  MA  Morgan Kaufmann Elsevier  ISBN                       Guide to using the event calculus 
Shanahan  M         Solving the frame problem  A mathematical investigation of the common sense law of inertia  MIT Press 
Shanahan  M          The Event Calculus Explained  Springer Verlag  LNAI                
Notes edit 


  For example 
before Time   Time     
   timeline Eternity   
   append Before   Time    After   Eternity   
   member Time   Before  

timeline                     








Retrieved from  https   en wikipedia org w index php title Event calculus amp oldid