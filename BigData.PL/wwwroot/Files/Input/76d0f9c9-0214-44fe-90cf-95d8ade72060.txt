Algorithm to search the nodes of a graph
This article needs additional citations for verification  Please help improve this article by adding citations to reliable sources  Unsourced material may be challenged and removed Find sources        Breadth first search              news        newspapers        books        scholar        JSTOR   April        Learn how and when to remove this message 
Animated example of a breadth first search  Black  explored  grey  queued to be explored later on
BFS on Maze solving algorithm
Top part of Tic tac toe game tree
Breadth first search  BFS  is an algorithm for searching a tree data structure for a node that satisfies a given property  It starts at the tree root and explores all nodes at the present depth prior to moving on to the nodes at the next depth level  Extra memory  usually a queue  is needed to keep track of the child nodes that were encountered but not yet explored  
For example  in a chess endgame  a chess engine may build the game tree from the current position by applying all possible moves and use breadth first search to find a win position for White  Implicit trees  such as game trees or other problem solving trees  may be of infinite size  breadth first search is guaranteed to find a solution node            if one exists 
In contrast   plain  depth first search  DFS   which explores the node branch as far as possible before backtracking and expanding other nodes             may get lost in an infinite branch and never make it to the solution node  Iterative deepening depth first search avoids the latter drawback at the price of exploring the tree s top parts over and over again  On the other hand  both depth first algorithms typically require far less extra memory than breadth first search            
Breadth first search can be generalized to both undirected graphs and directed graphs with a given start node  sometimes referred to as a  search key               In state space search in artificial intelligence  repeated searches of vertices are often allowed  while in theoretical analysis of algorithms based on breadth first search  precautions are typically taken to prevent repetitions 
BFS and its application in finding connected components of graphs were invented in      by Konrad Zuse  in his  rejected  Ph D  thesis on the Plankalk l programming language  but this was not published until                  It was reinvented in      by Edward F  Moore  who used it to find the shortest path out of a maze                        and later developed by C  Y  Lee into a wire routing algorithm  published in                  


Pseudocode edit 
Input  A graph G and a starting vertex root of G
Output  Goal state  The parent links trace the shortest path back to root           

    procedure BFS G  root  is
        let Q be a queue
        label root as explored
        Q enqueue root 
        while Q is not empty do
            v         Q dequeue  
            if v is the goal then
                return v
            for all edges from v to w in G adjacentEdges v  do
                if w is not labeled as explored then
                    label w as explored
                    w parent         v
                    Q enqueue w 

More details edit 
This non recursive implementation is similar to the non recursive implementation of depth first search  but differs from it in two ways 

it uses a queue  First In First Out  instead of a stack  Last In First Out  and
it checks whether a vertex has been explored before enqueueing the vertex rather than delaying this check until the vertex is dequeued from the queue 
If G is a tree  replacing the queue of this breadth first search algorithm with a stack will yield a depth first search algorithm  For general graphs  replacing the stack of the iterative depth first search implementation with a queue would also produce a breadth first search algorithm  although a somewhat nonstandard one             
The Q queue contains the frontier along which the algorithm is currently searching 
Nodes can be labelled as explored by storing them in a set  or by an attribute on each node  depending on the implementation 
Note that the word node is usually interchangeable with the word vertex 
The parent attribute of each node is useful for accessing the nodes in a shortest path  for example by backtracking from the destination node up to the starting node  once the BFS has been run  and the predecessors nodes have been set 
Breadth first search produces a so called breadth first tree  You can see how a breadth first tree looks in the following example 

Example edit 
The following is an example of the breadth first tree obtained by running a BFS on German cities starting from Frankfurt 

An example map of Southern Germany with some connections between cities
The breadth first tree obtained when running BFS on the given map and starting in Frankfurt
Analysis edit 
Time and space complexity edit 
The time complexity can be expressed as 
  
    
      
        O
         
        
           
        
        V
        
           
        
         
        
           
        
        E
        
           
        
         
      
    
      displaystyle O  V   E   
  
  since every vertex and every edge will be explored in the worst case  
  
    
      
        
           
        
        V
        
           
        
      
    
      displaystyle  V  
  
 is the number of vertices and 
  
    
      
        
           
        
        E
        
           
        
      
    
      displaystyle  E  
  
 is the number of edges in the graph 
Note that 
  
    
      
        O
         
        
           
        
        E
        
           
        
         
      
    
      displaystyle O  E   
  
 may vary between 
  
    
      
        O
         
         
         
      
    
      displaystyle O    
  
 and 
  
    
      
        O
         
        
           
        
        V
        
          
             
          
          
             
          
        
         
      
    
      displaystyle O  V       
  
  depending on how sparse the input graph is             
When the number of vertices in the graph is known ahead of time  and additional data structures are used to determine which vertices have already been added to the queue  the space complexity can be expressed as 
  
    
      
        O
         
        
           
        
        V
        
           
        
         
      
    
      displaystyle O  V   
  
  where 
  
    
      
        
           
        
        V
        
           
        
      
    
      displaystyle  V  
  
 is the number of vertices  This is in addition to the space
required for the graph itself  which may vary depending on the graph representation used by an implementation of the algorithm 
When working with graphs that are too large to store explicitly  or infinite   it is more practical to describe the complexity of breadth first search in different terms  to find the nodes that are at distance d from the start node  measured in number of edge traversals   BFS takes O bd      time and memory  where b is the  branching factor  of the graph  the average out degree                                   

Completeness edit 
In the analysis of algorithms  the input to breadth first search is assumed to be a finite graph  represented as an adjacency list  adjacency matrix  or similar representation  However  in the application of graph traversal methods in artificial intelligence the input may be an implicit representation of an infinite graph  In this context  a search method is described as being complete if it is guaranteed to find a goal state if one exists  Breadth first search is complete  but depth first search is not  When applied to infinite graphs represented implicitly  breadth first search will eventually find the goal state  but depth first search may get lost in parts of the graph that have no goal state and never return             

BFS ordering edit 
An enumeration of the vertices of a graph is said to be a BFS ordering if it is the possible output of the application of BFS to this graph 
Let 
  
    
      
        G
         
         
        V
         
        E
         
      
    
      displaystyle G  V E  
  
 be a graph  with 
  
    
      
        n
      
    
      displaystyle n 
  
 vertices   Recall that 
  
    
      
        N
         
        v
         
      
    
      displaystyle N v  
  
 is the set of neighbors of 
  
    
      
        v
      
    
      displaystyle v 
  
 
Let 
  
    
      
          x c  
         
         
        
          v
          
             
          
        
         
          x     
         
        
          v
          
            m
          
        
         
      
    
      displaystyle  sigma   v      dots  v  m   
  
 be a list of distinct elements of 
  
    
      
        V
      
    
      displaystyle V 
  
  for 
  
    
      
        v
          x     
        V
          x     
         
        
          v
          
             
          
        
         
          x     
         
        
          v
          
            m
          
        
         
      
    
      displaystyle v in V setminus   v      dots  v  m    
  
  let 
  
    
      
        
            x bd 
          
              x c  
          
        
         
        v
         
      
    
      displaystyle  nu    sigma   v  
  
 be the least 
  
    
      
        i
      
    
      displaystyle i 
  
 such that 
  
    
      
        
          v
          
            i
          
        
      
    
      displaystyle v  i  
  
 is a neighbor of 
  
    
      
        v
      
    
      displaystyle v 
  
  if such a 
  
    
      
        i
      
    
      displaystyle i 
  
 exists  and be 
  
    
      
          x   e 
      
    
      displaystyle  infty  
  
 otherwise 
Let 
  
    
      
          x c  
         
         
        
          v
          
             
          
        
         
          x     
         
        
          v
          
            n
          
        
         
      
    
      displaystyle  sigma   v      dots  v  n   
  
 be an enumeration of the vertices of 
  
    
      
        V
      
    
      displaystyle V 
  
 
The enumeration 
  
    
      
          x c  
      
    
      displaystyle  sigma  
  
 is said to be a BFS ordering  with source 
  
    
      
        
          v
          
             
          
        
      
    
      displaystyle v     
  
  if  for all 
  
    
      
         
         lt 
        i
          x     
        n
      
    
      displaystyle   lt i leq n 
  
  
  
    
      
        
          v
          
            i
          
        
      
    
      displaystyle v  i  
  
 is the vertex 
  
    
      
        w
          x     
        V
          x     
         
        
          v
          
             
          
        
         
          x     
         
        
          v
          
            i
              x     
             
          
        
         
      
    
      displaystyle w in V setminus   v      dots  v  i      
  
 such that 
  
    
      
        
            x bd 
          
             
            
              v
              
                 
              
            
             
              x     
             
            
              v
              
                i
                  x     
                 
              
            
             
          
        
         
        w
         
      
    
      displaystyle  nu    v      dots  v  i      w  
  
 is minimal  Equivalently  
  
    
      
          x c  
      
    
      displaystyle  sigma  
  
 is a BFS ordering if  for all 
  
    
      
         
          x     
        i
         lt 
        j
         lt 
        k
          x     
        n
      
    
      displaystyle   leq i lt j lt k leq n 
  
 with 
  
    
      
        
          v
          
            i
          
        
          x     
        N
         
        
          v
          
            k
          
        
         
          x     
        N
         
        
          v
          
            j
          
        
         
      
    
      displaystyle v  i  in N v  k   setminus N v  j   
  
  there exists a neighbor  
  
    
      
        
          v
          
            m
          
        
      
    
      displaystyle v  m  
  
 of 
  
    
      
        
          v
          
            j
          
        
      
    
      displaystyle v  j  
  
 such that 
  
    
      
        m
         lt 
        i
      
    
      displaystyle m lt i 
  
 

Applications edit 
Breadth first search can be used to solve many problems in graph theory  for example 

Copying garbage collection  Cheney s algorithm
Finding the shortest path between two nodes u and v  with path length measured by number of edges  an advantage over depth first search             
 Reverse  Cuthill McKee mesh numbering
Ford Fulkerson method for computing the maximum flow in a flow network
Serialization Deserialization of a binary tree vs serialization in sorted order  allows the tree to be re constructed in an efficient manner 
Construction of the failure function of the Aho Corasick pattern matcher 
Testing bipartiteness of a graph 
Implementing parallel algorithms for computing a graph s transitive closure              
See also edit 
Depth first search
Iterative deepening depth first search
Level structure
Lexicographic breadth first search
Parallel breadth first search
Dijkstra s algorithm
References edit 


  that is  a node satisfying the specified property

  Cormen Thomas H   et      al                  Introduction to Algorithms  MIT Press 

  Korf  Richard E           Depth First Iterative Deepening  An Optimal Admissible Tree Search   Artificial Intelligence               doi         D HQ  X  

   Graph    benchmark specification  supercomputer performance evaluation    Graph    org        Archived from the original on             Retrieved            

  Zuse  Konrad         Der Plankalk l  in German   Konrad Zuse Internet Archive  See pp         of the linked pdf file  internal numbering            

  Moore  Edward F           The shortest path through a maze   Proceedings of the International Symposium on the Theory of Switching  Harvard University Press  pp                As cited by Cormen  Leiserson  Rivest  and Stein 

  Skiena  Steven          Sorting and Searching   The Algorithm Design Manual  Springer  p            Bibcode     adm  book     S  doi                              ISBN                        

  Lee  C  Y           An Algorithm for Path Connections and Its Applications   IRE Transactions on Electronic Computers               doi         TEC               S CID               

  Cormen  Thomas H   January              Breadth first search   Introduction to algorithms  Prentice Hall Of India Pvt  Limited  ISBN                         OCLC                 

   Stack based graph traversal   depth first search            github io  Retrieved            

  Cormen  Thomas H   Leiserson  Charles E   Rivest  Ronald L   Stein  Clifford                      Breadth first search   Introduction to Algorithms   nd      ed    MIT Press and McGraw Hill  pp                ISBN                    

  Russell  Stuart  Norvig  Peter                Artificial Intelligence  A Modern Approach   nd      ed    Prentice Hall  ISBN                     

  Coppin  B          Artificial intelligence illuminated  Jones  amp  Bartlett Learning  pp             

  Aziz  Adnan  Prakash  Amit             Algorithms on Graphs   Algorithms for Interviews  Algorithmsforinterviews com  p            ISBN                     

  Dhulipala  Laxman  Blelloch  Guy E   Shun  Julian  August            Theoretically Efficient Parallel Graph Algorithms Can Be Fast and Scalable  p           arXiv             doi                          ISBN                     S CID               



Knuth  Donald E          The Art of Computer Programming Vol     rd ed   Boston  Addison Wesley  ISBN                         archived from the original on             retrieved           

External links edit 
Open Data Structures   Section          Breadth First Search  Pat Morin
vteData structures and algorithmsData structures
Array
Associative array
Binary search tree
Fenwick tree
Graph
Hash table
Heap
Linked list
Queue
Segment tree
Stack
String
Tree
Trie
Algorithms and algorithmic paradigms
Backtracking
Binary search
Breadth first search
Brute force search
Depth first search
Divide and conquer
Dynamic programming
Graph traversal
Fold
Greedy
Hash function
Minimax
Online
Randomized
Recursion
Root finding
Sorting
Streaming
Sweep line
String searching
Topological sorting

List of data structures
List of algorithms

vteGraph and tree traversal algorithmsSearch
    pruning
A 
IDA 
LPA 
SMA 
Best first search
Beam search
Bidirectional search
Breadth first search
Lexicographic
Parallel
B 
Depth first search
Iterative deepening
D 
Fringe search
Jump point search
Monte Carlo tree search
SSS 
Shortest path
Bellman Ford
Dijkstra s
Floyd Warshall
Johnson s
Shortest path faster
Yen s
Minimum spanning tree
Bor vka s
Kruskal s
Prim s
Reverse delete
List of graph search algorithms





Retrieved from  https   en wikipedia org w index php title Breadth first search amp oldid