General purpose programming language



PythonParadigmMulti paradigm  object oriented             procedural  imperative   functional  structured  reflectiveDesigned      byGuido van RossumDeveloperPython Software FoundationFirst      appeared        February                  years ago                             Stable release      
       February                 months ago         February      
Typing disciplineduck  dynamic  strong             optional type annotations  since      but those hints are ignored  except with unofficial tools            OS
Tier       bit Linux  macOS      and    bit Windows               
Tier    E g     bit WebAssembly  WASI 
Tier       bit Android             iOS  FreeBSD  and     bit  Raspberry Pi OSUnofficial  or has been known to work   Other Unix like BSD variants  and a few other platforms                                 
LicensePython Software Foundation LicenseFilename extensions py   pyw   pyz             
 pyi   pyc   pydWebsitepython orgMajor implementationsCPython  PyPy  Stackless Python  MicroPython  CircuitPython  IronPython  JythonDialectsCython  RPython  Starlark            Influenced byABC              Ada              ALGOL                 APL              C              C                CLU              Dylan              Haskell                          Icon              Lisp              Modula                            Perl              Standard ML            InfluencedApache Groovy  Boo  Cobra  CoffeeScript              D  F   GDScript  Go  JavaScript                          Julia              Mojo              Nim  Ring              Ruby              Swift              V            
 Python Programming at Wikibooks

Python is a high level  general purpose programming language  Its design philosophy emphasizes code readability with the use of significant indentation             
Python is dynamically type checked and garbage collected  It supports multiple programming paradigms  including structured  particularly procedural   object oriented and functional programming  It is often described as a  batteries included  language due to its comprehensive standard library                         
Guido van Rossum began working on Python in the late     s as a successor to the ABC programming language  and he first released it in      as Python                         Python          was released in       Python           released in       was a major revision not completely backward compatible with earlier versions  Python              released in       was the last release of Python                    
Python consistently ranks as one of the most popular programming languages  and it has gained widespread use in the machine learning community                                                 


History edit 
Main article  History of Python
The designer of Python  Guido van Rossum  at PyCon US     
Python was conceived in the late     s             by Guido van Rossum at Centrum Wiskunde  amp  Informatica  CWI  in the Netherlands  it was conceived as a successor to the ABC programming language  which was inspired by SETL              capable of exception handling and interfacing with the Amoeba operating system              Python implementation began in December                        Van Rossum assumed sole responsibility for the project  as the lead developer  until    July       when he announced his  permanent vacation  from responsibilities as Python s  benevolent dictator for life   BDFL   this title was bestowed on him by the Python community to reflect his long term commitment as the project s chief decision maker               He has since come out of retirement and is self titled  BDFL emeritus    In January            active Python core developers elected a five member Steering Council to lead the project                         
The name Python is said to derive from the British comedy series Monty Python s Flying Circus             
Python     was released on    October       with many major new features such as list comprehensions  cycle detecting garbage collection  reference counting  and Unicode support              Python     s end of life was initially set for       and then postponed to      out of concern that a large body of existing code could not easily be forward ported to Python                                 It no longer receives security patches or updates                          While Python     and older versions are officially unsupported  a different unofficial Python implementation  PyPy  continues to support Python    i e              plus        with the plus signifying  at least some   backported security updates              
Python          was released on   December       with some new semantics and changed syntax  At least every Python release since  the now unsupported      has added some syntax to the language  a few later releases have removed outdated modules and have changed semantics  at least in a minor way 
As of        April               update       Python        is the latest stable release  it s highly recommended to upgrade to it  or upgrade any other older   x release   This version currently receives full bug fix and security updates  while Python      released in October      had active bug fix support only until April       and since then only security fixes  Python                 is the oldest supported version of Python  albeit in the  security support  phase   because Python     has become an end of life product                          Starting with Python       it and later versions receive two years of full support  which has increased from one and a half years   followed by three years of security support  this is the same total duration of support as previously 
Security updates were expedited in      and again twice in       More issues were fixed in      and in September       for Python versions        through         all versions  including                  had been insecure because of issues leading to possible remote code execution             and web cache poisoning                
Python      added the   union type operator             and the match and case keywords  for structural pattern matching statements   Python      expanded exception handling functionality  Python      added the new keyword type  Notable changes from version      to      include increased program execution speed and improved error reporting              Python      is claimed to be        faster than Python       and Python      increases by an additional     Python      also includes improved error messages  again improved in       and many other changes 
Python      introduces more syntax for types  a new and improved interactive interpreter  REPL   featuring multi line editing and color support  an incremental garbage collector  which results in shorter pauses for collection in programs that have many objects  as well as increasing the improved speed in      and         an experimental just in time  JIT  compiler  such features  can needs to be enabled specifically for the increase in speed               and an experimental free threaded build mode  which disables the global interpreter lock  GIL   allowing threads to run more concurrently  as enabled inpython    t or python    t exe 
Python      introduces some changes in behavior  i e   new  well defined semantics   fixing bugs  and removing many deprecated classes  functions and methods  as well as some of the Python C API and outdated modules    The  old implementation of locals   and frame f locals was slow  inconsistent and buggy   and it had many corner cases and oddities  Code that works around those may need revising  code that uses locals   for simple templating or print debugging should continue to work correctly              
Python      introduces the experimental free threaded build mode  which disables the Global Interpreter Lock  GIL   the GIL is a feature of CPython that previously prevented multiple threads from executing Python bytecode simultaneously  This optional build  introduced through PEP      enables better exploitation of multi core CPUs  By allowing multiple threads to run Python code in parallel  the free threaded mode addresses long standing performance bottlenecks associated with the GIL  This change offers a new path for parallelism in Python  without resorting to multiprocessing or external concurrency frameworks             
Some additional standard library modules will be removed in Python      or       as will be many deprecated classes  functions and methods                         
Python      adds Sigstore digital verification signatures for all CPython artifacts  in addition to the now deprecated PGP signatures   the use of PGP has been criticized by security practitioners   Python is transitioning to Sigstore exclusively and plans to drop PGP in version                  
Python      removed wstr meaning Python extensions             need to be modified              and      added pattern matching to the language             
Python      dropped some outdated modules  and more will be dropped in the future  deprecated as of       already deprecated array  u  format code will emit DeprecationWarning since      and will be removed in Python       The  w  format code should be used instead  Part of ctypes is also deprecated and http server CGIHTTPRequestHandler will emit a DeprecationWarning  and will be removed in       Using that code already has a high potential for both security and functionality bugs  Parts of the typing module are deprecated  e g  creating a typing NamedTuple class using keyword arguments to denote the fields and such  and more  will be disallowed in Python      
Python      is now in the alpha   phase  With regard to possible change to annotations   In Python       from   future   import annotations will continue to work as it did before  converting annotations into strings              
Python Enhancement Proposal  PEP      proposes PyBI a standard format for distributing Python binaries             
Python      will  Make UTF   mode default               This mode is supported in all current Python versions  but it currently must be opted into  UTF   is already used by default on Windows  and other operating systems  for most purposes  an exception is opening files  Enabling UTF   also makes code fully cross platform 

Design philosophy and features edit 
Python is a multi paradigm programming language  Object oriented programming and structured programming are fully supported  and many of their features support functional programming and aspect oriented programming  including metaprogramming             and metaobjects               Many other paradigms are supported via extensions  including design by contract                         and logic programming              Python is often referred to as a  glue language              because it can seamlessly integrate components written in other languages 
Python uses dynamic typing and a combination of reference counting and a cycle detecting garbage collector for memory management              It uses dynamic name resolution  late binding   which binds method and variable names during program execution 
Python s design offers some support for functional programming in the Lisp tradition  It has filter mapandreduce functions  list comprehensions  dictionaries  sets  and generator expressions              The standard library has two modules  itertools and functools  that implement functional tools borrowed from Haskell and Standard ML             
Python s core philosophy is summarized in the Zen of Python  PEP      which includes aphorisms such as these             

Beautiful is better than ugly 
Explicit is better than implicit 
Simple is better than complex 
Complex is better than complicated 
Readability counts 
However  Python features regularly violate these principles and have received criticism for adding unnecessary language bloat              Responses to these criticisms note that the Zen of Python is a guideline rather than a rule              The addition of some new features had been controversial  Guido van Rossum resigned as Benevolent Dictator for Life after conflict about adding the assignment expression operator in Python                             
Nevertheless  rather than building all functionality into its core  Python was designed to be highly extensible via modules  This compact modularity has made it particularly popular as a means of adding programmable interfaces to existing applications  Van Rossum s vision of a small core language with a large standard library and easily extensible interpreter stemmed from his frustrations with ABC  which represented the opposite approach             
Python claims to strive for a simpler  less cluttered syntax and grammar  while giving developers a choice in their coding methodology  In contrast to Perl s motto  there is more than one way to do it   Python advocates an approach where  there should be one and preferably only one obvious way to do it                In practice  however  Python provides many ways to achieve a given goal  There are  for example  at least three ways to format a string literal  with no certainty as to which one a programmer should use              Alex Martelli is a Fellow at the Python Software Foundation and Python book author  he wrote that  To describe something as  clever  is not considered a compliment in the Python culture              
Python s developers usually try to avoid premature optimization  they also reject patches to non critical parts of the CPython reference implementation that would offer marginal increases in speed at the cost of clarity              Execution speed can be improved by moving speed critical functions to extension modules written in languages such as C  or by using a just in time compiler like PyPy  It is also possible to cross compile to other languages  but this approach either fails to achieve the expected speed up  since Python is a very dynamic language  or only a restricted subset of Python is compiled  with potential minor semantic changes              
Python s developers aim for the language to be fun to use  This goal is reflected in the name a tribute to the British comedy group Monty Python             and in playful approaches to some tutorials and reference materials  For instance  some code examples use the terms  spam  and  eggs   in reference to a Monty Python sketch   rather than the typical terms  foo  and  bar                           A common neologism in the Python community is pythonic  which has a wide range of meanings related to program style  Pythonic code may use Python idioms well  be natural or show fluency in the language  or conform with Python s minimalist philosophy and emphasis on readability             

Syntax and semantics edit 
Main article  Python syntax and semantics
An example of Python code and indentation
Example of C  code with curly braces and semicolons
Python is meant to be an easily readable language  Its formatting is visually uncluttered and often uses English keywords where other languages use punctuation  Unlike many other languages  it does not use curly brackets to delimit blocks  and semicolons after statements are allowed but rarely used  It has fewer syntactic exceptions and special cases than C or Pascal             

Indentation edit 
Main article  Python syntax and semantics        Indentation
Python uses whitespace indentation  rather than curly brackets or keywords  to delimit blocks  An increase in indentation comes after certain statements  a decrease in indentation signifies the end of the current block              Thus  the program s visual structure accurately represents its semantic structure              This feature is sometimes termed the off side rule  Some other languages use indentation this way  but in most  indentation has no semantic meaning  The recommended indent size is four spaces              

Statements and control flow edit 
Python s statements include the following 

The assignment statement  using a single equals sign  
The if statement  which conditionally executes a block of code  along with else and elif  a contraction of else if 
The for statement  which iterates over an iterable object  capturing each element to a local variable for use by the attached block
The while statement  which executes a block of code as long as its condition is true
The try statement  which allows exceptions raised in its attached code block to be caught and handled by except clauses  or new syntax except  in Python      for exception groups                the try statement also ensures that clean up code in a finally block is always run regardless of how the block exits
The raise statement  used to raise a specified exception or re raise a caught exception
The class statement  which executes a block of code and attaches its local namespace to a class  for use in object oriented programming
The def statement  which defines a function or method
The with statement  which encloses a code block within a context manager  allowing resource acquisition is initialization  RAII  like behavior and replacing a common try finally idiom              Examples of a context include acquiring a lock before some code is run  and then releasing the lock  or opening and then closing a file
The break statement  which exits a loop
The continue statement  which skips the rest of the current iteration and continues with the next
The del statement  which removes a variable deleting the reference from the name to the value  and producing an error if the variable is referred to before it is redefined      a     
The pass statement  serving as a NOP  i e   no operation   which is syntactically needed to create an empty code block
The assert statement  used in debugging to check for conditions that should apply
The yield statement  which returns a value from a generator function  and also an operator   used to implement coroutines
The return statement  used to return a value from a function
The import and from statements  used to import modules whose functions or variables can be used in the current program
The match and case statements  analogous to a switch statement construct  which compares an expression against one or more cases as a control flow measure
The assignment statement     binds a name as a reference to a separate  dynamically allocated object  Variables may subsequently be rebound at any time to any object  In Python  a variable name is a generic reference holder without a fixed data type  however  it always refers to some object with a type  This is called dynamic typing in contrast to statically typed languages  where each variable may contain only a value of a certain type 
Python does not support tail call optimization or first class continuations  according to Van Rossum  the language never will                            However  better support for coroutine like functionality is provided by extending Python s generators               Before      generators were lazy iterators  data was passed unidirectionally out of the generator  From Python          on  it is possible to pass data back into a generator function  and from version      data can be passed through multiple stack levels              

Expressions edit 
Python s expressions include the following 

The       and   operators for mathematical addition  subtraction  and multiplication are similar to other languages  but the behavior of division differs  There are two types of division in Python  floor division  or integer division      and floating point division                 Python uses the    operator for exponentiation 
Python uses the   operator for string concatenation  The language uses the   operator for duplicating a string a specified number of times 
The   infix operator is intended to be used by libraries such as NumPy for matrix multiplication                           
The syntax     called the  walrus operator   was introduced in Python      This operator assigns values to variables as part of a larger expression              
In Python     compares two objects by value  Python s is operator may be used to compare object identities  i e   comparison by reference   and comparisons may be chained for example  a  lt   b  lt   c 
Python uses and  or  and not as Boolean operators 
Python has a type of expression called a list comprehension  and a more general expression called a generator expression             
Anonymous functions are implemented using lambda expressions  however  there may be only one expression in each body 
Conditional expressions are written as x if c else y                This is different in operand order from the c        x        y operator common to many other languages  
Python makes a distinction between lists and tuples  Lists are written as            are mutable  and cannot be used as the keys of dictionaries  since dictionary keys must be immutable in Python   Tuples  written as            are immutable and thus can be used as the keys of dictionaries  provided that all of the tuple s elements are immutable  The   operator can be used to concatenate two tuples  which does not directly modify their contents  but produces a new tuple containing the elements of both  For example  given the variable t initially equal to            executing t   t          first evaluates t           which yields                  this result is then assigned back to t thereby effectively  modifying the contents  of t while conforming to the immutable nature of tuple objects  Parentheses are optional for tuples in unambiguous contexts              
Python features sequence unpacking where multiple expressions  each evaluating to something assignable  e g   a variable or a writable property  are associated just as in forming tuple literal  as a whole  the results are then put on the left hand side of the equal sign in an assignment statement  This statement expects an iterable object on the right hand side of the equal sign to produce the same number of values as the writable expressions on the left hand side  while iterating  the statement assigns each of the values produced on the right to the corresponding expression on the left              
Python has a  string format  operator   that functions analogously to printf format strings in the C language e g   quot spam  s eggs  d quot      quot blah quot      evaluates to  spam blah eggs     In Python           and     this operator was supplemented by the format   method of the str class  e g    quot spam     eggs     quot  format  quot blah quot       Python          added  f strings   spam    quot blah quot   eggs      f     spam  spam  eggs  eggs                    
Strings in Python can be concatenated by  adding  them  using the same operator as for adding integers and floats   e g    quot spam quot     quot eggs quot  returns  spameggs   If strings contain numbers  they are concatenated as strings rather than as integers  e g   quot   quot     quot   quot  returns      
Python supports string literals in several ways 
Delimited by single or double quotation marks  single and double quotation marks have equivalent functionality  unlike in Unix shells  Perl  and Perl influenced languages   Both marks use the backslash     as an escape character  String interpolation became available in Python          as  formatted string literals               
Triple quoted  i e   starting and ending with three single or double quotation marks  this may span multiple lines and function like here documents in shells  Perl  and Ruby 
Raw string varieties  denoted by prefixing the string literal with r  Escape sequences are not interpreted  hence raw strings are useful where literal backslashes are common  such as in regular expressions and Windows style paths   Compare    quoting  in C   
Python has array index and array slicing expressions in lists  which are written as a key   a start stop  or a start stop step   Indexes are zero based  and negative indexes are relative to the end  Slices take elements from the start index up to  but not including  the stop index  The  optional  third slice parameter  called step or stride  allows elements to be skipped or reversed  Slice indexes may be omitted for example  a    returns a copy of the entire list  Each element of a slice is a shallow copy 
In Python  a distinction between expressions and statements is rigidly enforced  in contrast to languages such as Common Lisp  Scheme  or Ruby  This distinction leads to duplicating some functionality  for example 

List comprehensions vs  for loops
Conditional expressions vs  if blocks
The eval   vs  exec   built in functions  in Python         exec is a statement   the former function is for expressions  while the latter is for statements
A statement cannot be part of an expression  because of this restriction  expressions such as list and dict comprehensions  and lambda expressions  cannot contain statements  As a particular case  an assignment statement such as a     cannot be part of the conditional expression of a conditional statement 

Methods edit 
Methods of objects are functions attached to the object s class  the syntax for normal methods and functions  instance method argument   is syntactic sugar for Class method instance  argument   Python methods have an explicit self parameter to access instance data  in contrast to the implicit self  or this  parameter in some object oriented programming languages  e g   C    Java  Objective C  Ruby                Python also provides methods  often called dunder methods  because their names begin and end with double underscores   these methods allow user defined classes to modify how they are handled by native operations including length  comparison  arithmetic  and type conversion              

Typing edit 
The standard type hierarchy in Python       
Python uses duck typing  and it has typed objects but untyped variable names  Type constraints are not checked at definition time  rather  operations on an object may fail at usage time  indicating that the object is not of an appropriate type  Despite being dynamically typed  Python is strongly typed  forbidding operations that are poorly defined  e g   adding a number and a string  rather than quietly attempting to interpret them 
Python allows programmers to define their own types using classes  most often for object oriented programming  New instances of classes are constructed by calling the class  for example  SpamClass   or EggsClass     the classes are instances of the metaclass type  which is an instance of itself   thereby allowing metaprogramming and reflection 
Before version      Python had two kinds of classes  both using the same syntax  old style and new style               Current Python versions support the semantics of only the new style 
Python supports optional type annotations                          These annotations are not enforced by the language  but may be used by external tools such as mypy to catch errors                            Mypy also supports a Python compiler called mypyc  which leverages type annotations for optimization              


Summary of Python   s built in types


Type

Mutability

Description

Syntax examples


bool

immutable

Boolean value

TrueFalse


bytearray

mutable

Sequence of bytes

bytearray b     Some ASCII      bytearray b quot Some ASCII quot  bytearray                      


bytes

immutable

Sequence of bytes

b     Some ASCII     b quot Some ASCII quot bytes                      


complex

immutable

Complex number with real and imaginary parts

     j       j


dict

mutable

Associative array  or dictionary  of key and value pairs  can contain mixed types  keys and values   keys must be a hashable type

      key                False   


types EllipsisType

immutable

An ellipsis placeholder to be used as an index in NumPy arrays

   Ellipsis


float

immutable

Double precision floating point number  The precision is machine dependent  but in practice it is generally implemented as a    bit IEEE          number with         bits of precision              


       



frozenset

immutable

Unordered set  contains no duplicates  can contain mixed types  if hashable

frozenset            string       True  


int

immutable

Integer of unlimited magnitude             

  


list

mutable

List  can contain mixed types

           string       True   


types NoneType

immutable

An object representing the absence of a value  often called null in other languages

None


types NotImplementedType

immutable

A placeholder that can be returned from overloaded operators to indicate unsupported operand types 

NotImplemented


range

immutable

An immutable sequence of numbers  commonly used for iterating a specific number of times in for loops             

range        range            


set

mutable

Unordered set  contains no duplicates  can contain mixed types  if hashable

           string       True set  


str

immutable

A character string  sequence of Unicode codepoints

     Wikipedia      quot Wikipedia quot  quot  quot  quot Spanning
multiple
lines quot  quot  quot 
Spanning
multiple
lines



tuple

immutable

Tuple  can contain mixed types

           string       True       single element         

Arithmetic operations edit 
Python includes conventional symbols for arithmetic operators               the floor division operator     and the modulo operator     With the module operator  a remainder can be negative  e g                       Python also offers the    symbol for exponentiation  e g              and                it also offers the matrix multiplication operator                  These operators work as in traditional mathematics  with the same precedence rules  the infix operators   and   can also be unary  to represent positive and negative numbers respectively 
Division between integers produces floating point results  The behavior of division has changed significantly over time              

The current version of Python  i e   since      changed the   operator to always represent floating point division  e g              
The floor division    operator was introduced  Thus                                        and                  For outdated Python     adding the from   future   import division statement causes a module in Python     to use Python          rules for division instead  see above  
In Python terms  the   operator represents true division  or simply division   while the    operator represents floor division  Before version      the   operator represents classic division              
Rounding towards negative infinity  though a different method than in most languages  adds consistency to Python  For instance  this rounding implies that the equation  a   b   b    a  b     is always true  The rounding also implies that the equation b  a  b    a b    a is valid for both positive and negative values of a  As expected  the result of a b lies in the half open interval     b   where b is a positive integer  however  maintaining the validity of the equation requires that the result must lie in the interval  b     when b is negative              
Python provides a round function for rounding a float to the nearest integer  For tie breaking  Python        uses the round to even method  round      and round      both produce                 Python versions before   used the round away from zero method  round      is      and round       is                   
Python allows Boolean expressions that contain multiple equality relations to be consistent with general usage in mathematics  For example  the expression a  lt  b  lt  c tests whether a is less than b and b is less than c               C derived languages interpret this expression differently  in C  the expression would first evaluate a  lt  b  resulting in   or    and that result would then be compared with c              
Python uses arbitrary precision arithmetic for all integer operations  The Decimal type class in the decimal module provides decimal floating point numbers to a pre defined arbitrary precision with several rounding modes               The Fraction class in the fractions module provides arbitrary precision for rational numbers              
Due to Python s extensive mathematics library and the third party library NumPy  the language is frequently used for scientific scripting in tasks such as numerical data processing and manipulation                           

Function syntax edit 
Functions are created in Python by using the def keyword  A function is defined similarly to how it is called  by first providing the function name and then the required parameters  Here is an example of a function that prints its inputs 

def printer input   input   quot already there quot   
    print input  
    print input  
    
printer  quot hello quot  
    
  Example output 
  hello
  already there
To assign a default value to a function parameter in case no actual value is provided at run time  variable definition syntax can be used inside the function header 
Code examples edit 
 Hello  World   program 

print      Hello  world       

Program to calculate the factorial of a positive integer 

n   int input      Type a number  and its factorial will be printed         

if n  lt    
    raise ValueError      You must enter a non negative integer      

factorial    
for i in range    n      
    factorial    i

print factorial 

Libraries edit 
Python s large standard library              is commonly cited as one of its greatest strengths  For Internet facing applications  many standard formats and protocols such as MIME and HTTP are supported  The language includes modules for creating graphical user interfaces  connecting to relational databases  generating pseudorandom numbers  arithmetic with arbitrary precision decimals               manipulating regular expressions  and unit testing 
Some parts of the standard library are covered by specifications for example  the Web Server Gateway Interface  WSGI  implementation wsgiref follows PEP                  but most parts are specified by their code  internal documentation  and test suites  However  because most of the standard library is cross platform Python code  only a few modules must be altered or rewritten for variant implementations 
As of         March                update      the Python Package Index  PyPI   the official repository for third party Python software  contains over                      packages  These have a wide range of functionality  including the following 


Automation
Data analytics
Databases
Documentation
Graphical user interfaces
Image processing
Machine learning
Mobile apps
Multimedia
Computer networking
Scientific computing
System administration
Test frameworks
Text processing
Web frameworks
Web scraping
Development environments edit 
See also  Comparison of integrated development environments        Python
Most Python implementations  including CPython  include a read eval print loop  REPL   this permits the environment to function as a command line interpreter  with which users enter statements sequentially and receive results immediately 
Python is also bundled with an integrated development environment  IDE  called IDLE  which is oriented toward beginners 
Other shells  including IDLE and IPython  add additional capabilities such as improved auto completion  session state retention  and syntax highlighting 
Standard desktop IDEs include PyCharm  IntelliJ Idea  Visual Studio Code  there are also web browser based IDEs  such as the following environments 

SageMath  for developing science  and math related programs 
Jupyter Notebooks  an open source interactive computing platform 
PythonAnywhere  a browser based IDE and hosting environment  and
Canopy IDE  a commercial IDE that emphasizes scientific computing                           
Implementations edit 
See also  List of Python software        Python implementations
Reference implementation edit 
CPython is the reference implementation of Python  This implementation is written in C  meeting the C   standard               since version       older versions use the C   standard with several select C   features   but third party extensions are not limited to older C versions e g   they can be implemented using C   or C                              CPython compiles Python programs into an intermediate bytecode               which is then executed by a virtual machine               CPython is distributed with a large standard library written in a combination of C and native Python 
CPython is available for many platforms  including Windows and most modern Unix like systems  including macOS  and Apple M  Macs  since Python             using an experimental installer   Starting with Python           the Python installer intentionally fails to install on Windows   and                              Windows XP was supported until Python           with unofficial support for VMS               Platform portability was one of Python s earliest priorities               During development of Python        and    even OS   and Solaris were supported               since that time  support has been dropped for many platforms 
All current Python versions  since      support only operating systems that feature multithreading  by now supporting not nearly as many operating systems  dropping many outdated  than in the past 

Other implementations edit 
All alternative implementations have at least slightly different semantic  For example  an alternative may include unordered dictionaries  in contrast to other current Python versions  As another example in the larger Python ecosystem  PyPy does not support the full C Python API  Alternative implementations include the following 

PyPy is a fast  compliant interpreter of Python          and                                  PyPy s just in time compiler often improves speed significantly relative to CPython  but PyPy does not support some libraries written in C               PyPy offers support for the RISC V instruction set architecture  for example 
Codon is an implentation with an ahead of time  AOT  compiler  which compiles a statically typed Python like language whose  syntax and semantics are nearly identical to Python s  there are some notable differences               For example  Codon uses    bit machine integers for speed  not arbitrarily as with Python  Codon developers claim that speedups over CPython are usually on the order of ten to a hundred times  Codon compiles to machine code  via LLVM  and supports native multithreading                Codon can also compile to Python extension modules that can be imported and used from Python 
MicroPython and CircuitPython are Python        variants that are optimized for microcontrollers  including the Lego Mindstorms EV               
Pyston is a variant of the Python runtime that uses just in time compilation to speed up execution of Python programs              
Cinder is a performance oriented fork of CPython     that features a number of optimizations  including bytecode inline caching  eager evaluation of coroutines  a method at a time JIT  and an experimental bytecode compiler              
The Snek                                        embedded computing language  is Python inspired  but it is not Python  It is possible to write Snek programs that run under a full Python system  but most Python programs will not run under Snek                Snek is compatible with   bit AVR microcontrollers such as ATmega    P based Arduino  as well as larger microcontrollers that are compatible with MicroPython  Snek is an imperative language that  unlike Python  omits object oriented programming  Snek supports only one numeric data type  which features    bit single precision  resembling JavaScript numbers  though smaller  
Unsupported implementations edit 
Stackless Python is a significant fork of CPython that implements microthreads  This implementation uses the call stack differently  thus allowing massively concurrent programs  PyPy also offers a stackless version              
Just in time Python compilers have been developed  but are now unsupported 

Google began a project named Unladen Swallow in       this project aimed to speed up the Python interpreter five fold by using LLVM  and improve multithreading capability for scaling to thousands of cores               while typical implementations are limited by the global interpreter lock 
Psyco is a discontinued just in time specializing compiler  which integrates with CPython and transforms bytecode to machine code at runtime  The emitted code is specialized for certain data types and is faster than standard Python code  Psyco does not support Python          or later 
PyS   was a Python        interpreter for Series    mobile phones  which was released by Nokia in       The interpreter implemented many modules from Python s standard library  as well as additional modules for integration with the Symbian operating system  The Nokia N    also supports Python through the GTK widget library  allowing programs to be written and run on the target device              
Cross compilers to other languages edit 
There are several compilers transpilers to high level object languages  the source language is unrestricted Python  a subset of Python  or a language similar to Python 

Brython               Transcrypt                            and Pyjs compile Python to JavaScript   The latest release of Pyjs was in       
Cython compiles a superset of Python to C  The resulting code can be used with Python via direct C level API calls into the Python interpreter 
PyJL compiles transpiles a subset of Python to  human readable  maintainable  and high performance Julia source code               Despite the developers  performance claims  this is not possible for arbitrary Python code  that is  compiling to a faster language or machine code is known to be impossible in the general case  The semantics of Python might potentially be changed  but in many cases speedup is possible with few or no changes in the Python code  The faster Julia source code can then be used from Python or compiled to machine code 
Nuitka compiles Python into C               This compiler works with Python     to       and     and      for Python s main supported platforms  and Windows   or even Windows XP  and for Android  The compiler developers claim full support for Python       partial support for Python      and        and experimental support for Python       Nuitka supports macOS including Apple Silicon based versions   The compiler is free of cost  though it has commercial add ons  e g   for hiding source code  
Numba is a JIT compiler that is used from Python  the compiler translates a subset of Python and NumPy code into fast machine code  This tool is enabled by adding a decorator to the relevant Python code 
Pythran compiles a subset of Python        to C    C                   
RPython can be compiled to C  and it is used to build the PyPy interpreter for Python 
The Python     l   C   transpiler              compiles a subset of Python        to C    C      
There are also specialized compilers 

MyHDL is a Python based hardware description language  HDL  that converts MyHDL code to Verilog or VHDL code 
Some older projects existed  as well as compilers not designed for use with Python   x and related syntax 

Google s Grumpy transpiles Python        to Go                                         The latest release was in      
IronPython allows running Python          programs with the  NET Common Language Runtime               An alpha version  released in        is available for  Python           although features and behaviors from later versions may be included               
Jython compiles Python          to Java bytecode  allowing the use of Java libraries from a Python program              
Pyrex  last released in       and Shed Skin  last released in       compile to C and C   respectively 
Performance edit 
A perforance comparison among various Python implementations  using a non numerical  combinatorial  workload  was presented at EuroSciPy                   In addition  Python s performance relative to other programming languages is benchmarked by The Computer Language Benchmarks Game              
There are several approaches to optimizing Python performance  given the inherent slowness of an interpreted language  These approaches include the following strategies or tools 

Just in time compilation  Dynamically compiling Python code just before it is executed  This technique is used in libraries such as Numba and PyPy 
Static compilation  Python code is compiled into machine code sometime before execution  An example of this approach is Cython  which compiles Python into C 
Concurrency and parallelism  Multiple tasks can be run simultaneously  Python contains modules such as  multiprocessing  to support this form of parallelism  Moreover  this approach helps to overcome limitations of the Global Interpreter Lock  GIL  in CPU tasks 
Efficient data structures  Performance can also be improved by using data types such as Set for membership tests  or deque from collections for queue operations 
Language Development edit 
Python s development is conducted largely through the Python Enhancement Proposal  PEP  process  this process is the primary mechanism for proposing major new features  collecting community input on issues  and documenting Python design decisions               Python coding style is covered in PEP                      Outstanding PEPs are reviewed and commented on by the Python community and the steering council              
Enhancement of the language corresponds with development of the CPython reference implementation  The mailing list python dev is the primary forum for the language s development  Specific issues were originally discussed in the Roundup bug tracker hosted by the foundation               In       all issues and discussions were migrated to GitHub               Development originally took place on a self hosted source code repository running Mercurial  until Python moved to GitHub in January                   
CPython s public releases have three types  distinguished by which part of the version number is incremented 

Backward incompatible versions  where code is expected to break and must be manually ported  The first part of the version number is incremented  These releases happen infrequently version     was released   years after      According to Guido van Rossum  a version     will probably never exist              
Major or  feature  releases are largely compatible with the previous version but introduce new features  The second part of the version number is incremented  Starting with Python           these releases are expected to occur annually                            Each major version is supported by bug fixes for several years after its release              
Bug fix releases               which introduce no new features  occur approximately every three months  these releases are made when a sufficient number of bugs have been fixed upstream since the last release  Security vulnerabilities are also patched in these releases  The third and final part of the version number is incremented              
Many alpha  beta  and release candidates are also released as previews and for testing before final releases  Although there is a rough schedule for releases  they are often delayed if the code is not ready yet  Python s development team monitors the state of the code by running a large unit test suite during development              
The major academic conference on Python is PyCon  There are also special Python mentoring programs  such as PyLadies 

API documentation generators edit 
Tools that can generate documentation for Python API include pydoc  available as part of the standard library   Sphinx  and Pdoc and its forks  Doxygen and Graphviz              

Naming edit 
Python s name is inspired by the British comedy group Monty Python  whom Python creator Guido van Rossum enjoyed while developing the language  Monty Python references appear frequently in Python code and culture               for example  the metasyntactic variables often used in Python literature are spam and eggs  rather than the traditional foo and bar                            The official Python documentation also contains various references to Monty Python routines                            Python users are sometimes referred to as  Pythonistas               
The affix Py is often used when naming Python applications or libraries  Some examples include the following 

Pygame  a binding of Simple DirectMedia Layer to Python  commonly used to create games  
PyQt and PyGTK  which bind Qt and GTK to Python respectively 
PyPy  a Python implementation originally written in Python 
NumPy  a Python library for numerical processing 
Popularity edit 
Since       Python has consistently ranked in the top ten of the most popular programming languages in the TIOBE Programming Community Index  as of December               update       Python was the most popular language              Python was selected as Programming Language of the Year  for  the highest rise in ratings in a year   in                   and      the only language to have done so four times as of          update                     In the TIOBE Index  monthly rankings are based on the volume of searches for programming languages on Google  Amazon  Wikipedia  Bing  and    other platforms  According to the accompanying graph  Python has shown a marked upward trend since the early     s  eventually passing more established languages such as C  C    and Java  This trend can be attributed to Python s readable syntax  comprehensive standard library  and application in data science and machine learning fields              

TIOBE Index Chart showing Python s popularity compared to other programming languages
Large organizations that use Python include Wikipedia  Google               Yahoo                CERN               NASA               Facebook               Amazon  Instagram               Spotify               and some smaller entities such as Industrial Light  amp  Magic              and ITA               The social news networking site Reddit was developed mostly in Python               Organizations that partly use Python include Discord              and Baidu              

Types of Use edit 
Main article  List of Python software
Software that is powered by Python
Python has many uses  including the following 

Scripting for web applications
Scientific computing
Artificial intelligence and machine learning projects
Graphical user interfaces and desktop environments
Embedded scripting in software and hardware products
Operating systems
Information security
Python can serve as a scripting language for web applications  e g   via the mod wsgi module for the Apache web server               With Web Server Gateway Interface  a standard API has evolved to facilitate these applications  Web frameworks such as Django  Pylons  Pyramid  TurboGears  web py  Tornado  Flask  Bottle  and Zope support developers in the design and maintenance of complex applications  Pyjs and IronPython can be used to develop the client side of Ajax based applications  SQLAlchemy can be used as a data mapper to a relational database  Twisted is a framework to program communication between computers  this framework is used by Dropbox  for example 
Libraries such as NumPy  SciPy and Matplotlib allow the effective use of Python in scientific computing                            with specialized libraries such as Biopython and Astropy providing domain specific functionality  SageMath is a computer algebra system with a notebook interface that is programmable in Python  the SageMath library covers many aspects of mathematics  including algebra  combinatorics  numerical mathematics  number theory  and calculus               OpenCV has Python bindings with a rich set of features for computer vision and image processing              
Python is commonly used in artificial intelligence and machine learning projects  with support from libraries such as TensorFlow  Keras  Pytorch  scikit learn and ProbLog  a logic language                                                                    As a scripting language with a modular architecture  simple syntax  and rich text processing tools  Python is often used for natural language processing              
The combination of Python and Prolog has proven useful for AI applications  with Prolog providing knowledge representation and reasoning capabilities  The Janus system  in particular  exploits similarities between these two languages  in part because of their dynamic typing and their simple  recursive data structures  This combination is typically applied natural language processing  visual query answering  geospatial reasoning  and handling semantic web data                           
The Natlog system  implemented in Python  uses Definite Clause Grammars  DCGs  to create prompts for two types of generators  text to text generators such as GPT   and text to image generators such as DALL E or Stable Diffusion              
Python can be used for graphical user interfaces  GUIs   by using libraries such as Tkinter               Similarly  for the One Laptop per Child XO computer  most of the Sugar desktop environment is written in Python  as of                    
Python is embedded in many software products  and some hardware products  as a scripting language  These products include the following  

finite element method software such as Abaqus 
 D parametric modelers such as FreeCAD 
 D animation packages such as  ds Max  Blender  Cinema  D  Lightwave  Houdini  Maya  modo  MotionBuilder  Softimage 
the visual effects compositor Nuke 
 D imaging programs such as GIMP               Inkscape  Scribus and Paint Shop Pro               and
musical notation programs such as scorewriter and capella 
Similarly  GNU Debugger uses Python as a pretty printer to show complex structures such as C   containers  Esri promotes Python as the best choice for writing scripts in ArcGIS               Python has also been used in several video games                            and it has been adopted as first of the three programming languages available in Google App Engine  the other two being Java and Go                LibreOffice includes Python  and its developers plan to replace Java with Python  LibreOffice s Python Scripting Provider is a core feature              since version      from   February        
Among hardware products  the Raspberry Pi single board computer project has adopted Python as its main user programming language 
Many operating systems include Python as a standard component  Python ships with most Linux distributions               AmigaOS    using Python            FreeBSD  as a package   NetBSD  and OpenBSD  as a package   it can be used from the command line  terminal   Many Linux distributions use installers written in Python  Ubuntu uses the Ubiquity installer  while Red Hat Linux and Fedora Linux use the Anaconda installer  Gentoo Linux uses Python in its package management system  Portage              
Python is used extensively in the information security industry  including in exploit development                            

Languages influenced by Python edit 
Python s design and philosophy have influenced many other programming languages 

Boo uses indentation  a similar syntax  and a similar object model              
Cobra uses indentation and a similar syntax  its Acknowledgements document lists Python first among influencing languages              
CoffeeScript  a programming language that cross compiles to JavaScript  has a Python inspired syntax 
ECMAScript JavaScript borrowed iterators and generators from Python              
GDScript  a Python like scripting language that is built in to the Godot game engine              
Go is designed for  speed of working in a dynamic language like Python                Go shares Python s syntax for slicing arrays 
Groovy was motivated by a desire to incorporate the Python design philosophy into Java              
Julia was designed to be  as usable for general programming as Python              
Mojo is a non strict                          superset of Python  e g   omitting classes  and adding struct               
Nim uses indentation and a similar syntax              
Ruby s creator  Yukihiro Matsumoto  said that  I wanted a scripting language that was more powerful than Perl  and more object oriented than Python  That s why I decided to design my own language               
Swift  a programming language developed by Apple  has some Python inspired syntax              
Kotlin blends Python and Java features  which minimizes boilerplate code and enhances developer efficiency              
Python s development practices have also been emulated by other languages  For example  Python requires a document that describes the rationale and context for any language change  this document is known as a Python Enhancement Proposal or PEP  This practice is also used by the developers of Tcl               Erlang               and Swift              

See also edit 

Computer programming portalFree and open source software portal
Python syntax and semantics
pip  package manager 
List of programming languages
History of programming languages
Comparison of programming languages

Notes edit 


  del in Python does not behave the same way delete in languages such as C   does  where such a word is used to call the destructor and deallocate heap memory 


References edit 


   General Python FAQ   Python   documentation   docs python org  Retrieved   July      

   Python       part         alt sources archives  Archived from the original on    August       Retrieved    August      

   Why is Python a dynamic language and also a strongly typed language   Python Wiki  Archived from the original on    March       Retrieved    January      

  a b  PEP       The Theory of Type Hints   Python org  Archived from the original on    June       Retrieved    June      

   PEP      CPython platform support   peps python org   Python Enhancement Proposals  PEPs   Retrieved    April      

   PEP       Adding Android as a supported platform   peps python org   Python Enhancement Proposals  PEPs   Retrieved    May      

   Download Python for Other Platforms   Python org  Archived from the original on    November       Retrieved    August      

   test   Regression tests package for Python   Python        documentation   docs python org  Archived from the original on    May       Retrieved    May      

   platform   Access to underlying platform s identifying data   Python        documentation   docs python org  Archived from the original on    May       Retrieved    May      

  Holth  Moore     March         PEP        Improving Python ZIP Application Support   Archived from the original on    December       Retrieved    November      

   Starlark Language   Archived from the original on    June       Retrieved    May      

  a b  Why was Python created in the first place    General Python FAQ  Python Software Foundation  Archived from the original on    October       Retrieved    March       I had extensive experience with implementing an interpreted language in the ABC group at CWI  and from working with this group I had learned a lot about language design  This is the origin of many Python features  including the use of indentation for statement grouping and the inclusion of very high level data types  although the details are all different in Python  

   Ada    Reference Manual  raise statement    Archived from the original on    October       Retrieved   January      

  a b Kuchling  Andrew M      December         Interview with Guido van Rossum  July         amk ca  Archived from the original on   May       Retrieved    March       I d spent a summer at DEC s Systems Research Center  which introduced me to Modula     the Modula   final report was being written there at about the same time  What I learned there later showed up in Python s exception handling  modules  and the fact that methods explicitly contain  self  in their parameter list  String slicing came from Algol    and Icon 

  a b c  itertools   Functions creating iterators for efficient looping   Python       documentation   docs python org  Archived from the original on    June       Retrieved    November       This module implements a number of iterator building blocks inspired by constructs from APL  Haskell  and SML 

  van Rossum  Guido          An Introduction to Python for UNIX C Programmers   Proceedings of the NLUUG Najaarsconferentie  Dutch UNIX Users Group   CiteSeerX                      even though the design of C is far from ideal  its influence on Python is considerable 

  a b  Classes   The Python Tutorial  Python Software Foundation  Archived from the original on    October       Retrieved    February       It is a mixture of the class mechanisms found in C   and Modula  

  Lundh  Fredrik   Call By Object   effbot org  Archived from the original on    November       Retrieved    November       replace  CLU  with  Python    record  with  instance   and  procedure  with  function or method   and you get a pretty accurate description of Python s object model 

  Simionato  Michele   The Python     Method Resolution Order   Python Software Foundation  Archived from the original on    August       Retrieved    July       The C  method itself has nothing to do with Python  since it was invented by people working on Dylan and it is described in a paper intended for lispers

  Kuchling  A  M   Functional Programming HOWTO   Python v      documentation  Python Software Foundation  Archived from the original on    October       Retrieved   February       List comprehensions and generator expressions       are a concise notation for such operations  borrowed from the functional programming language Haskell 

  Schemenauer  Neil  Peters  Tim  Hetland  Magnus Lie     May         PEP            Simple Generators   Python Enhancement Proposals  Python Software Foundation  Archived from the original on   June       Retrieved   February      

   More Control Flow Tools   Python   documentation  Python Software Foundation  Archived from the original on   June       Retrieved    July       By popular demand  a few features commonly found in functional programming languages like Lisp have been added to Python  With the lambda keyword  small anonymous functions can be created 

   re   Regular expression operations   Python        documentation   docs python org  Archived from the original on    July       Retrieved   September       This module provides regular expression matching operations similar to those found in Perl 

   CoffeeScript   coffeescript org  Archived from the original on    June       Retrieved   July      

   Perl and Python influences in JavaScript   www  ality com     February       Archived from the original on    December       Retrieved    May      

  Rauschmayer  Axel   Chapter    The Nature of JavaScript  Influences   O Reilly  Speaking JavaScript  Archived from the original on    December       Retrieved    May      

  a b  Why We Created Julia   Julia website  February       Archived from the original on   May       Retrieved   June       We want something as usable for general programming as Python      

  a b Krill  Paul    May         Mojo language marries Python and MLIR for AI development   InfoWorld  Archived from the original on   May       Retrieved   May      

  Ring Team    December         Ring and other languages   ring lang net  ring lang  Archived from the original on    December       Retrieved   December      

  Bini  Ola         Practical JRuby on Rails Web     Projects  bringing Ruby on Rails to the Java platform  Berkeley  APress  p          ISBN                        

  Lattner  Chris    June         Chris Lattner s Homepage   Chris Lattner  Archived from the original on    December       Retrieved   June       The Swift language is the product of tireless effort from a team of language experts  documentation gurus  compiler optimization ninjas  and an incredibly important internal dogfooding group who provided feedback to help refine and battle test ideas  Of course  it also greatly benefited from the experiences hard won by many other languages in the field  drawing ideas from Objective C  Rust  Haskell  Ruby  Python  C   CLU  and far too many others to list 

   V documentation  Introduction    GitHub  Retrieved    December      

  Kuhlman  Dave   A Python Book  Beginning Python  Advanced Python  and Python Exercises   Section      Archived from the original  PDF  on    June      

   About Python   Python Software Foundation  Archived from the original on    April       Retrieved    April        second section  Fans of Python use the phrase  batteries included  to describe the standard library  which covers everything from asynchronous processing to zip files  

   PEP       Python Advanced Library   Python org  Archived from the original on   May       Retrieved    October      

  Rossum  Guido Van     January         The History of Python  A Brief Timeline of Python   The History of Python  Archived from the original on   June       Retrieved   March      

  Peterson  Benjamin     April         Python         the last release of Python     Python Insider  Archived from the original on    April       Retrieved    April      

   Stack Overflow Developer Survey        Stack Overflow  Archived from the original on    June       Retrieved    August      

   The State of Developer Ecosystem in      Infographic   JetBrains  Developer Tools for Professionals and Teams  Archived from the original on   March       Retrieved   March      

  a b  TIOBE Index   TIOBE  Archived from the original on    February       Retrieved   January       The TIOBE Programming Community index is an indicator of the popularity of programming languages Updated as required 

   PYPL PopularitY of Programming Language index   pypl github io  Archived from the original on    March       Retrieved    March      

  a b Venners  Bill     January         The Making of Python   Artima Developer  Artima  Archived from the original on   September       Retrieved    March      

  van Rossum  Guido     August         SETL  was  Lukewarm about range literals    Python Dev  Mailing list   Archived from the original on    July       Retrieved    March      

  van Rossum  Guido     January         A Brief Timeline of Python   The History of Python  Archived from the original on   June       Retrieved    January      

  Fairchild  Carlie     July         Guido van Rossum Stepping Down from Role as Python s Benevolent Dictator For Life   Linux Journal  Archived from the original on    July       Retrieved    July      

   PEP        Python Software Foundation  Archived from the original on   June       Retrieved   May      

   PEP      Python Language Governance   Python org  Archived from the original on    May       Retrieved    August      

  Briggs  Jason R   Lipova a  Miran         Python for kids  a playful introduction to programming  San Francisco  Calif  No Starch Press  ISBN                        

  Kuchling  A  M   Zadka  Moshe     October         What s New in Python       Python Software Foundation  Archived from the original on    October       Retrieved    February      

   PEP       Python     Release Schedule   python org  Archived from the original on    May       Retrieved   January      

   PEP       Network Security Enhancements for Python     x   python org  Archived from the original on   June       Retrieved   January      

   Sunsetting Python     Python org  Archived from the original on    January       Retrieved    September      

   PEP       Python     Release Schedule   Python org  Archived from the original on    January       Retrieved    September      

  mattip     December         PyPy v       release   PyPy  Archived from the original on   January       Retrieved   January      

  Langa   ukasz     May         Python        is now available   Python Insider  Archived from the original on    May       Retrieved    May      

   Status of Python versions   Python Developer s Guide  Retrieved   October      

   Python   endoflife date    October       Retrieved    November      

   CVE             Red Hat Customer Portal  Archived from the original on   March       Retrieved    February      

   CVE             CVE  Archived from the original on    February       Retrieved    February      

   CVE              CVE  Archived from the original on    February       Retrieved    February      

   Built in Types  

  corbet     October         Python      released      LWN net        lwn net  Retrieved    November      

   What s New In Python        Python documentation  Retrieved    April      

   PEP       Consistent views of namespaces   peps python org   Python Enhancement Proposals  PEPs   Retrieved   October      

   PEP       Making the GIL Optional in CPython   Python Enhancement Proposals  PEPs   Retrieved    March      

  Wouters  Thomas    April         Python Insider  Python        and       a  released   Python Insider  Retrieved    April      

   PEP       Removing dead batteries from the standard library   Python Enhancement Proposals  Python Softtware Foundation     May      

   PEP       Deprecating PGP signatures for CPython artifacts   peps python org   Python Enhancement Proposals  PEPs   Retrieved   January      

      Extending Python with C or C     Python       documentation   docs python org  Archived from the original on    June       Retrieved    February      

   PEP       Remove wstr from Unicode   Python org  Archived from the original on   March       Retrieved    February      

   PEP       Structural Pattern Matching  Specification   Python org  Archived from the original on   May       Retrieved    February      

   PEP       Implementing PEP       peps python org   Python Enhancement Proposals  PEPs   Retrieved    November      

   PEP      PyBI  a standard format for distributing Python Binaries   Discussions on Python org    April       Retrieved    November      

   PEP       Make UTF   mode default   peps python org   Python Enhancement Proposals  PEPs   Retrieved    November      

  The Cain Gang Ltd   Python Metaclasses  Who  Why  When    PDF   Archived from the original  PDF  on    May       Retrieved    June      

        Special method names   The Python Language Reference  Python Software Foundation  Archived from the original on    December       Retrieved    June      

   PyDBC  method preconditions  method postconditions and class invariants for Python   Archived from the original on    November       Retrieved    September      

   Contracts for Python   Archived from the original on    June       Retrieved    September      

   PyDatalog   Archived from the original on    June       Retrieved    July      

   Glue It All Together With Python   Python org  Retrieved    September      

   Extending and Embedding the Python Interpreter  Reference Counts   Docs python org  Archived from the original on    October       Retrieved   June       Since Python makes heavy use of malloc   and free    it needs a strategy to avoid memory leaks as well as the use of freed memory  The chosen method is called reference counting 

  a b Hettinger  Raymond     January         PEP            Generator Expressions   Python Enhancement Proposals  Python Software Foundation  Archived from the original on    June       Retrieved    February      

       itertools        Functions creating iterators for efficient looping   Docs python org  Archived from the original on    June       Retrieved    November      

  a b Peters  Tim     August         PEP           The Zen of Python   Python Enhancement Proposals  Python Software Foundation  Archived from the original on    December       Retrieved    November      

  Lutz  Mark  January         Python Changes         Learning Python  Archived from the original on    March       Retrieved    February      

   Confusion regarding a rule in The Zen of Python   Python Help   Discussions on Python org    May       Archived from the original on    February       Retrieved    February      

  Ambi  Chetan    July         The Most Controversial Python Walrus Operator   Python Simplified  Archived from the original on    August       Retrieved   February      

  Grifski  Jeremy     May         The Controversy Behind The Walrus Operator in Python   The Renegade Coder  Archived from the original on    December       Retrieved    February      

  Bader  Dan   Python String Formatting Best Practices   Real Python  Archived from the original on    February       Retrieved    February      

  Martelli  Alex  Ravenscroft  Anna  Ascher  David         Python Cookbook   nd Edition  O Reilly Media  p            ISBN                         Archived from the original on    February       Retrieved    November      

   Python Culture   ebeab     January       Archived from the original on    January      

  a b  Transpiling Python to Julia using PyJL   PDF   Archived  PDF  from the original on    November       Retrieved    September       After manually modifying one line of code by specifying the necessary type information  we obtained a speedup of        making the translated Julia code       faster than the original Python code 

   Why is it called Python    General Python FAQ  Docs python org  Archived from the original on    October       Retrieved   January      

      Ways Python Is a Powerful Force on the Web   Archived from the original on    May       Retrieved   July      

   pprint   Data pretty printer   Python        documentation   docs python org  Archived from the original on    January       Retrieved   November       stuff   spam    eggs    lumberjack    knights    ni  

   Code Style   The Hitchhiker s Guide to Python   docs python guide org  Archived from the original on    January       Retrieved    January      

   Is Python a good language for beginning programmers    General Python FAQ  Python Software Foundation  Archived from the original on    October       Retrieved    March      

   Myths about indentation in Python   Secnetix de  Archived from the original on    February       Retrieved    April      

  Guttag  John V      August        Introduction to Computation and Programming Using Python  With Application to Understanding Data  MIT Press  ISBN                        

   PEP     Style Guide for Python Code   Python org  Archived from the original on    April       Retrieved    March      

      Errors and Exceptions   Python       a  documentation   docs python org  Archived from the original on   May       Retrieved   May      

   Highlights  Python       Python org  Archived from the original on   August       Retrieved    March      

  van Rossum  Guido     April         Tail Recursion Elimination   Neopythonic blogspot be  Archived from the original on    May       Retrieved   December      

  van Rossum  Guido    February         Language Design Is Not Just Solving Puzzles   Artima forums  Artima  Archived from the original on    January       Retrieved    March      

  van Rossum  Guido  Eby  Phillip J      May         PEP            Coroutines via Enhanced Generators   Python Enhancement Proposals  Python Software Foundation  Archived from the original on    May       Retrieved    February      

   PEP       Python org  Archived from the original on   June       Retrieved   December      

   division   python org  Archived from the original on    July       Retrieved    July      

   PEP        A dedicated infix operator for matrix multiplication   python org  Archived from the original on   June       Retrieved   January      

   Python       Release and Changelog   python org  Archived from the original on    May       Retrieved   January      

   What s New in Python       Archived from the original on   June       Retrieved    October      

  van Rossum  Guido  Hettinger  Raymond    February         PEP            Conditional Expressions   Python Enhancement Proposals  Python Software Foundation  Archived from the original on    March       Retrieved    July      

      Built in Types   Python      rc  documentation   python org  Archived from the original on    June       Retrieved   October      

        Tuples and Sequences   Python      rc  documentation   python org  Archived from the original on    June       Retrieved    October      

  a b  PEP       Literal String Interpolation   python org  Archived from the original on    June       Retrieved   March      

   Why must  self  be used explicitly in method definitions and calls    Design and History FAQ  Python Software Foundation  Archived from the original on    October       Retrieved    February      

  Sweigart  Al         Beyond the Basic Stuff with Python  Best Practices for Writing Clean Code  No Starch Press  p            ISBN                         Archived from the original on    August       Retrieved   July      

   The Python Language Reference  section      New style and classic classes  for release         Archived from the original on    October       Retrieved    January      

   PEP       Type Hints   peps python org   peps python org  Archived from the original on    November       Retrieved    November      

   typing   Support for type hints   Python documentation  Python Software Foundation  Archived from the original on    February       Retrieved    December      

   mypy   Optional Static Typing for Python   Archived from the original on   June       Retrieved    January      

   Introduction   mypyc readthedocs io  Archived from the original on    December       Retrieved    December      

       Floating Point Arithmetic  Issues and Limitations   Python       documentation   docs python org  Archived from the original on   June       Retrieved   June       Almost all machines today  November       use IEEE     floating point arithmetic  and almost all platforms map Python floats to IEEE      double precision  

  Zadka  Moshe  van Rossum  Guido     March         PEP            Unifying Long Integers and Integers   Python Enhancement Proposals  Python Software Foundation  Archived from the original on    May       Retrieved    September      

   Built in Types   Archived from the original on    June       Retrieved   October      

   PEP       A dedicated infix operator for matrix multiplication   python org  Archived from the original on    May       Retrieved   July      

  a b Zadka  Moshe  van Rossum  Guido     March         PEP            Changing the Division Operator   Python Enhancement Proposals  Python Software Foundation  Archived from the original on    May       Retrieved    October      

   Why Python s Integer Division Floors      August       Archived from the original on   June       Retrieved    August      

   round   The Python standard library  release          Built in functions  archived from the original on    October       retrieved    August     

   round   The Python standard library  release          Built in functions  archived from the original on    October       retrieved    August     

  Beazley  David M          Python Essential Reference   th      ed    Addison Wesley Professional  p           ISBN                    

  Kernighan  Brian W   Ritchie  Dennis M          The C Programming Language   nd      ed    p           

  a b Batista  Facundo     October         PEP            Decimal Data Type   Python Enhancement Proposals  Python Software Foundation  Archived from the original on   June       Retrieved    November      

   What s New in Python       Python v      documentation     October       Archived from the original on    December       Retrieved    September      

      Reasons Python Rocks for Research  And a Few Reasons it Doesn t    Hoyt Koepke   University of Washington Department of Statistics  Archived from the original on    May       Retrieved   February      

  Shell  Scott     June         An introduction to Python for scientific computing   PDF   Archived  PDF  from the original on   February       Retrieved   February      

  Piotrowski  Przemyslaw  July         Build a Rapid Web Development Environment for Python Server Pages and Oracle   Oracle Technology Network  Oracle  Archived from the original on   April       Retrieved    March      

  Eby  Phillip J     December         PEP            Python Web Server Gateway Interface v      Python Enhancement Proposals  Python Software Foundation  Archived from the original on    June       Retrieved    February      

   PyPI   PyPI     March       Archived from the original on    February      

  Enthought  Canopy   Canopy   www enthought com  Archived from the original on    July       Retrieved    August      

   Project Jupyter   Jupyter org  Archived from the original on    October       Retrieved   April      

   PEP     Style Guide for C Code   peps python org   peps python org  Archived from the original on    April       Retrieved    April      

      Building C and C   Extensions   Python       documentation   docs python org  Archived from the original on   March       Retrieved   March      

  van Rossum  Guido    June         PEP          Style Guide for C Code   Python Enhancement Proposals  Python Software Foundation  Archived from the original on   June       Retrieved    November      

   CPython byte code   Docs python org  Archived from the original on   June       Retrieved    February      

   Python     internals   PDF   Archived  PDF  from the original on   August       Retrieved    April      

   Changelog   Python       documentation   docs python org  Archived from the original on   February       Retrieved   February      

   Download Python   Python org  Archived from the original on   December       Retrieved    December      

   history      vmspython        www vmspython org  Archived from the original on   December       Retrieved   December      

   An Interview with Guido van Rossum   Oreilly com  Archived from the original on    July       Retrieved    November      

   Download Python for Other Platforms   Python org  Archived from the original on    November       Retrieved   December      

   PyPy compatibility   Pypy org  Archived from the original on   June       Retrieved   December      

  Team  The PyPy     December         Download and Install   PyPy  Archived from the original on   January       Retrieved   January      

   speed comparison between CPython and Pypy   Speed pypy org  Archived from the original on    May       Retrieved   December      

   Codon  Differences with Python   Archived from the original on    May       Retrieved    August      

  Lawson  Loraine     March         MIT Created Compiler Speeds up Python Code   The New Stack  Archived from the original on   April       Retrieved    August      

   Python for EV    LEGO Education  Archived from the original on   June       Retrieved    April      

  Yegulalp  Serdar     October         Pyston returns from the dead to speed Python   InfoWorld  Archived from the original on    January       Retrieved    January      

   cinder  Instagram s performance oriented fork of CPython   GitHub  Archived from the original on   May       Retrieved   May      

  Aroca  Rafael    August         Snek Lang  feels like Python on Arduinos   Yet Another Technology Blog  Archived from the original on   January       Retrieved   January      

  Aufranc  CNXSoft   Jean Luc     January         Snekboard Controls LEGO Power Functions with CircuitPython or Snek Programming Languages  Crowdfunding    CNX Software   CNX Software   Embedded Systems News  Archived from the original on   January       Retrieved   January      

  Kennedy   mkennedy   Michael   Ready to find out if you re git famous    pythonbytes fm  Archived from the original on   January       Retrieved   January      

  Packard  Keith     December         The Snek Programming Language  A Python inspired Embedded Computing Language   PDF   Archived  PDF  from the original on   January       Retrieved   January      

   Application level Stackless features   PyPy       documentation   Doc pypy org  Archived from the original on   June       Retrieved    July      

   Plans for optimizing Python   Google Project Hosting     December       Archived from the original on    April       Retrieved    September      

   Python on the Nokia N      Stochastic Geometry     April       Archived from the original on    June       Retrieved   July      

   Brython   brython info  Archived from the original on   August       Retrieved    January      

   Transcrypt   Python in the browser   transcrypt org  Archived from the original on    August       Retrieved    December      

   Transcrypt  Anatomy of a Python to JavaScript Compiler   InfoQ  Archived from the original on   December       Retrieved    January      

   Nuitka Home   Nuitka Home   nuitka net  Archived from the original on    May       Retrieved    August      

  Guelton  Serge  Brunet  Pierrick  Amini  Mehdi  Merlini  Adrien  Corbillon  Xavier  Raynaud  Alan     March         Pythran  enabling static optimization of scientific Python programs   Computational Science  amp  Discovery         IOP Publishing          Bibcode     CS     D     a    G  doi                               ISSN                

   The Python     l   C   transpiler   Archived from the original on    September       Retrieved    July      

   google grumpy      April       Archived from the original on    April       Retrieved    March              via GitHub 

   Projects   opensource google  Archived from the original on    April       Retrieved    March      

  Francisco  Thomas Claburn in San   Google s Grumpy code makes Python Go   www theregister com  Archived from the original on   March       Retrieved    January      

   IronPython net     ironpython net  Archived from the original on    April      

   GitHub   IronLanguages ironpython   Implementation of Python   x for  NET Framework that is built on top of the Dynamic Language Runtime   GitHub  Archived from the original on    September      

   Jython FAQ   www jython org  Archived from the original on    April       Retrieved    April      

  Murri  Riccardo         Performance of Python runtimes on a non numeric scientific code  European Conference on Python in Science  EuroSciPy   arXiv            Bibcode     arXiv         M 

   The Computer Language Benchmarks Game   Archived from the original on    June       Retrieved    April      

  a b Warsaw  Barry  Hylton  Jeremy  Goodger  David     June         PEP          PEP Purpose and Guidelines   Python Enhancement Proposals  Python Software Foundation  Archived from the original on   June       Retrieved    April      

   PEP     Style Guide for Python Code   Python org  Archived from the original on    April       Retrieved    March      

  Cannon  Brett   Guido  Some Guys  and a Mailing List  How Python is Developed   python org  Python Software Foundation  Archived from the original on   June       Retrieved    June      

   Moving Python s bugs to GitHub      LWN net        Archived from the original on   October       Retrieved   October      

   Python Developer s Guide   Python Developer s Guide   devguide python org  Archived from the original on   November       Retrieved    December      

  Hughes  Owen     May         Programming languages  Why Python     might never arrive  according to its creator   TechRepublic  Archived from the original on    July       Retrieved    May      

   PEP       Annual Release Cycle for Python   Python org  Archived from the original on    June       Retrieved   November      

   Changing the Python release cadence      LWN net        lwn net  Archived from the original on   November       Retrieved   November      

  Norwitz  Neal    April              Python Dev      Release Schedules  was Stability  amp  change    Archived from the original on    December       Retrieved    June      

  a b Aahz  Baxter  Anthony     March         PEP          Bug Fix Releases   Python Enhancement Proposals  Python Software Foundation  Archived from the original on   June       Retrieved    June      

   Python Buildbot   Python Developer s Guide  Python Software Foundation  Archived from the original on   June       Retrieved    September      

   Documentation Tools   Python org  Archived from the original on    November       Retrieved    March      

  a b  Whetting Your Appetite   The Python Tutorial  Python Software Foundation  Archived from the original on    October       Retrieved    February      

   In Python  should I use else after a return in an if block    Stack Overflow  Stack Exchange     February       Archived from the original on    June       Retrieved   May      

  Lutz  Mark         Learning Python  Powerful Object Oriented Programming  O Reilly Media  Inc  p           ISBN                     Archived from the original on    July       Retrieved   May      

  Fehily  Chris         Python  Peachpit Press  p       xv  ISBN                     Archived from the original on    July       Retrieved   May      

  Lubanovic  Bill         Introducing Python  Sebastopol  CA        O Reilly Media  p            ISBN                         Retrieved    July      

  Blake  Troy     January         TIOBE Index for January        Technology News and Information by SeniorDBA  Archived from the original on    March       Retrieved    February      

   TIOBE Index   TIOBE  Retrieved    March      

   Quotes about Python   Python Software Foundation  Archived from the original on   June       Retrieved   January      

   Organizations Using Python   Python Software Foundation  Archived from the original on    August       Retrieved    January      

   Python        the holy grail of programming   CERN Bulletin            CERN Publications     July       Archived from the original on    January       Retrieved    February      

  Shafer  Daniel G      January         Python Streamlines Space Shuttle Mission Design   Python Software Foundation  Archived from the original on   June       Retrieved    November      

   Tornado  Facebook s Real Time Web Framework for Python   Facebook for Developers   Facebook for Developers  Archived from the original on    February       Retrieved    June      

   What Powers Instagram  Hundreds of Instances  Dozens of Technologies   Instagram Engineering     December       Archived from the original on    June       Retrieved    May      

   How we use Python at Spotify   Spotify Labs     March       Archived from the original on    June       Retrieved    July      

  Fortenberry  Tim     January         Industrial Light  amp  Magic Runs on Python   Python Software Foundation  Archived from the original on   June       Retrieved    February      

  Taft  Darryl K     March         Python Slithers into Systems   eWeek com  Ziff Davis Holdings  Archived from the original on    August       Retrieved    September      

  GitHub   reddit archive reddit  historical code from reddit com   The Reddit Archives  archived from the original on   June       retrieved    March     

   Real time communication at scale with Elixir at Discord     October      

   What Programming Language is Baidu Built In      July      

   Usage statistics and market share of Python for websites         Archived from the original on    August       Retrieved    December      

  Oliphant  Travis          Python for Scientific Computing   Computing in Science and Engineering                Bibcode     CSE      c    O  CiteSeerX                       doi         MCSE          ISSN                 S CID                 Archived from the original on    June       Retrieved    April      

  Millman  K  Jarrod  Aivazis  Michael          Python for Scientists and Engineers   Computing in Science and Engineering                Bibcode     CSE      b    M  doi         MCSE          Archived from the original on    February       Retrieved   July      

  Science education with SageMath  Innovative Computing in Science Education  archived from the original on    June       retrieved    April     

   OpenCV  OpenCV Python Tutorials   docs opencv org  Archived from the original on    September       Retrieved    September      

  Dean  Jeff  Monga  Rajat  et      al     November         TensorFlow  Large scale machine learning on heterogeneous systems   PDF   TensorFlow org  Google Research  Archived  PDF  from the original on    November       Retrieved    November      

  Piatetsky  Gregory   Python eats away at R  Top Software for Analytics  Data Science  Machine Learning in       Trends and Analysis   KDnuggets  Archived from the original on    November       Retrieved    May      

   Who is using scikit learn    scikit learn        documentation   scikit learn org  Archived from the original on   May       Retrieved    November      

  Jouppi  Norm   Google supercharges machine learning tasks with TPU custom chip   Google Cloud Platform Blog  Archived from the original on    May       Retrieved    May      

  De Raedt  Luc  Kimmig  Angelika          Probabilistic  logic  programming concepts   Machine Learning                 doi         s               z  S CID              

   Natural Language Toolkit   NLTK    b  documentation   www nltk org  Archived from the original on    June       Retrieved    April      

  Andersen  C  and Swift  T         The Janus System  a bridge to new prolog applications  In Prolog  The Next    Years  pp           Cham  Springer Nature Switzerland 

   SWI Prolog Python interface   Archived from the original on    March       Retrieved    March      

  Tarau  P         Reflections on automation  learnability and expressiveness in logic based programming languages  In Prolog  The Next    Years  pp            Cham  Springer Nature Switzerland 

   Tkinter   Python interface to TCL Tk   Archived from the original on    October       Retrieved   June      

   Python Tkinter Tutorial     June       Archived from the original on   June       Retrieved   June      

   Installers for GIMP for Windows   Frequently Asked Questions      July       Archived from the original on    July       Retrieved    July      

   jasc psp components   Archived from the original on    March      

   About getting started with writing geoprocessing scripts   ArcGIS Desktop Help      Environmental Systems Research Institute     November       Archived from the original on   June       Retrieved    February      

  CCP porkbelly     August         Stackless Python       EVE Community Dev Blogs  CCP Games  Archived from the original on    January       Retrieved    January       As you may know  EVE has at its core the programming language known as Stackless Python 

  Caudill  Barry     September         Modding Sid Meier s Civilization IV   Sid Meier s Civilization IV Developer Blog  Firaxis Games  Archived from the original on   December       we created three levels of tools     The next level offers Python and XML support  letting modders with more experience manipulate the game world and everything in it 

   Python Language Guide  v       Google Documents List Data API v     Archived from the original on    July      

       New Features and Fixes   LibreOffice org  The Document Foundation        Archived from the original on   February       Retrieved    February      

   Python Setup and Usage   Python Software Foundation  Archived from the original on    June       Retrieved    January      

   What is Sugar    Sugar Labs  Archived from the original on   January       Retrieved    February      

   Immunity  Knowing You re Secure   Archived from the original on    February      

   Core Security   Core Security  Archived from the original on   June       Retrieved    April      

   Gotchas for Python Users   boo codehaus org  Codehaus Foundation  Archived from the original on    December       Retrieved    November      

  Esterbrook  Charles   Acknowledgements   cobra language com  Cobra Language  Archived from the original on   February       Retrieved   April      

   Proposals  iterators and generators      ES  Wiki        wiki ecmascript org  Archived from the original on    October       Retrieved    November      

   Frequently asked questions   Godot Engine documentation  Archived from the original on    April       Retrieved    May      

  Kincaid  Jason     November         Google s Go  A New Programming Language That s Python Meets C     TechCrunch  Archived from the original on    January       Retrieved    January      

  Strachan  James     August         Groovy        the birth of a new dynamic language for the Java platform   Archived from the original on   April       Retrieved    June      

   Modular Docs   Why Mojo   docs modular com  Archived from the original on   May       Retrieved   May       Mojo as a member of the Python family      Embracing Python massively simplifies our design efforts  because most of the syntax is already specified        we decided that the right long term goal for Mojo is to provide a superset of Python  i e  be compatible with existing programs  and to embrace the CPython immediately for long tail ecosystem enablement  To a Python programmer  we expect and hope that Mojo will be immediately familiar  while also providing new tools for developing systems level code that enable you to do things that Python falls back to C and C   for 

  Spencer  Michael    May         What is Mojo Programming Language    datasciencelearningcenter substack com  Archived from the original on   May       Retrieved   May      

  Yegulalp  Serdar     January         Nim language draws from best of Python  Rust  Go  and Lisp   InfoWorld  Archived from the original on    October       Retrieved   June       Nim s syntax is strongly reminiscent of Python s  as it uses indented code blocks and some of the same syntax  such as the way if elif then else blocks are constructed  

   An Interview with the Creator of Ruby   Linuxdevcenter com  Archived from the original on    April       Retrieved   December      

  Lattner  Chris    June         Chris Lattner s Homepage   Chris Lattner  Archived from the original on    December       Retrieved   June       I started work on the Swift Programming Language in July of       I implemented much of the basic language structure  with only a few people knowing of its existence  A few other  amazing  people started contributing in earnest late in       and it became a major focus for the Apple Developer Tools group in July            drawing ideas from Objective C  Rust  Haskell  Ruby  Python  C   CLU  and far too many others to list 

  Jalan  Nishant Aanjaney     November         Programming in Kotlin   CodeX  Retrieved    April      

  Kupries  Andreas  Fellows  Donal K      September         TIP     TIP Format   tcl tk  Tcl Developer Xchange  Archived from the original on    July       Retrieved    November      

  Gustafsson  Per  Niskanen  Raimo     January         EEP    EEP Purpose and Guidelines   erlang org  Archived from the original on    June       Retrieved    April      

   Swift Evolution Process   Swift Programming Language Evolution repository on GitHub     February       Archived from the original on    April       Retrieved    April      


Sources edit 
 Python for Artificial Intelligence   Python Wiki     July       Archived from the original on   November       Retrieved   December      
Paine  Jocelyn  ed   August         AI in Python   AI Expert Newsletter  Amzi   Archived from the original on    March       Retrieved    February      
 PyAIML              Python Package Index   Pypi python org  Retrieved    July      
Russell  Stuart J   amp  Norvig  Peter         Artificial Intelligence  A Modern Approach   rd      ed    Upper Saddle River  NJ  Prentice Hall  ISBN                        
Further reading edit 
Downey  Allen  July        Think Python  How to Think Like a Computer Scientist   rd      ed    O Reilly Media  ISBN                     
Lutz  Mark         Learning Python   th      ed    O Reilly Media  ISBN                        
Summerfield  Mark         Programming in Python     nd      ed    Addison Wesley Professional  ISBN                        
Ramalho  Luciano  May        Fluent Python  O Reilly Media  ISBN                        
External links edit 


Python  at Wikipedia s sister projects

Media from CommonsQuotations from WikiquoteTextbooks from WikibooksResources from WikiversityData from Wikidata

Official website 
The Python Tutorial
vtePythonImplementations
CircuitPython
CLPython
CPython
Cython
MicroPython
Numba
IronPython
Jython
Psyco
PyPy
Python for S  
Shed Skin
Stackless Python
Unladen Swallow
more   
IDEs
eric
IDLE
Ninja IDE
PyCharm
PyDev
Spyder
more   
Topics
WSGI
ASGI
Designer
Guido van Rossum

Software  list 
Python Software Foundation
Python Conference  PyCon 

vteProgramming languages
Comparison
Timeline
History

Ada
ALGOL
Simula
APL
Assembly
BASIC
Visual Basic
classic
 NET
C
C  
C 
COBOL
Erlang
Elixir
Forth
Fortran
Go
Haskell
Java
JavaScript
Julia
Kotlin
Lisp
Lua
MATLAB
ML
Caml 
OCaml
Pascal
Object Pascal
Perl 
Raku
PHP
Prolog
Python
R
Ruby
Rust
SAS
SQL
Scratch
Shell
Smalltalk
Swift
more   

 Lists  Alphabetical
Categorical
Generational
Non English based
 Category

vtePython web frameworks
CherryPy
CubicWeb
Django
FastAPI
Flask
Grok
Nevow
Pylons
Pyramid
Quixote
Tornado
TurboGears
TwistedWeb
web py
Zope  
more   

Comparison

vteDifferentiable computingGeneral
Differentiable programming
Information geometry
Statistical manifold
Automatic differentiation
Neuromorphic computing
Pattern recognition
Ricci calculus
Computational learning theory
Inductive bias
Hardware
IPU
TPU
VPU
Memristor
SpiNNaker
Software libraries
TensorFlow
PyTorch
Keras
scikit learn
Theano
JAX
Flux jl
MindSpore

 Portals
Computer programming
Technology

vteFree and open source softwareGeneral
Alternative terms for free software
Comparison of open source and closed source software
Comparison of source code hosting facilities
Free software
Free software project directories
Gratis versus libre
Long term support
Open source software
Open source software development
Outline
Timeline
Softwarepackages
Audio
Bioinformatics
Codecs
Configuration management
Drivers
Graphics
Wireless
Health
Mathematics
Office suites
Operating systems
Routing
Television
Video games
Web applications
E commerce
Android apps
iOS apps
Commercial
Formerly proprietary
Formerly open source
Community
Free software movement
History
Open source software movement
Events
Advocacy
Organisations
Free Software Movement of India
Free Software Foundation
Licenses
AFL
Apache
APSL
Artistic
Beerware
BSD
Creative Commons
CDDL
EPL
Free Software Foundation
GNU GPL
GNU AGPL
GNU LGPL
ISC
MIT
MPL
Python
Python Software Foundation License
Shared Source Initiative
Sleepycat
Unlicense
WTFPL
zlib
Types and standards
Comparison of licenses
Contributor License Agreement
Copyleft
Debian Free Software Guidelines
Definition of Free Cultural Works
Free license
The Free Software Definition
The Open Source Definition
Open source license
Permissive software license
Public domain

Challenges
Digital rights management
License proliferation
Mozilla software rebranding
Proprietary device drivers
Proprietary firmware
Proprietary software
SCO Linux controversies
Software patents
Software security
Tivoization
Trusted Computing
Related topics
Forking
GNU Manifesto
Microsoft Open Specification Promise
Open core model
Open source hardware
Shared Source Initiative
Source available software
The Cathedral and the Bazaar
Revolution OS

 Portal
 Category

vteStatistical softwarePublic domain
Dataplot
Epi Info
CSPro
X    ARIMA
Open source
ADMB
DAP
gretl
jamovi
JASP
JAGS
JMulTi
Julia
Jupyter  Julia  Python  R 
GNU Octave
OpenBUGS
Orange
PSPP
Python  statsmodels  PyMC   IPython  IDLE 
R  RStudio 
SageMath
SimFiT
SOFA Statistics
Stan
XLispStat
Freeware
BV   
CumFreq
SegReg
XploRe
WinBUGS
CommercialCross platform
Data Desk
GAUSS
GraphPad InStat
GraphPad Prism
IBM SPSS Statistics
IBM SPSS Modeler
JMP
Maple
Mathcad
Mathematica
MATLAB
OxMetrics
RATS
Revolution Analytics
SAS  SAS Viya 
SmartPLS
Stata
StatView
SUDAAN
S PLUS
TSP
World Programming System  WPS 
Windows only
BMDP
EViews
GenStat
LIMDEP
LISREL
MedCalc
Microfit
Minitab
MLwiN
NCSS
Shazam
SigmaStat
Statistica
StatsDirect
StatXact
SYSTAT
The Unscrambler
Unistat
Excel add ons
Analyse it
Unistat for Excel
XLfit
RExcel
Comparison   Category
vteNumerical analysis softwareFree
Advanced Simulation Library
ADMB
Chapel
Euler Mathematical Toolbox
FreeFem  
FreeMat
Genius
Gmsh
GNU Octave
gretl
Julia
Jupyter  Julia  Python  R  IPython 
MFEM
OpenFOAM
Python
R
SageMath
Salome
ScicosLab
Scilab
X  
Weka
Discontinued
Fortress

Proprietary
DADiSP
FEATool Multiphysics
GAUSS
LabVIEW
Maple
Mathcad
Mathematica
MATLAB
MWorks
SAS  SAS Viya 
Speakeasy
VisSim

Comparison

Authority control databases InternationalFASTNationalGermanyUnited StatesFranceBnF dataCzech RepublicIsraelOtherIdRef





Retrieved from  https   en wikipedia org w index php title Python  programming language  amp oldid