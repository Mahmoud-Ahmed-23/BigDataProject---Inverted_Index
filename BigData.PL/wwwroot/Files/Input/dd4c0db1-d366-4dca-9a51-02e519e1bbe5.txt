Java Tutorial
                                        
                                                                                    
                                                
                                                    Last Updated   
                                                       May      
                                                

                                                 
                                                 
                                                                                                            
                                                                                                                    
                                                            
                                                            
                                                              
                                                
                                                    
                                                        
                                                    
                                                
                                            
                                                                                                                                                                                        
                                                                    Comments
                                                                    
                                                                        
                                                                        
                                                                        
                                                                    
                                                                
                                                                
                                                                Improve
                                                                
                                                                    
                                                                    
                                                                    
                                                                
                                                             
                                                                                                                        
                                                                                                                    
                                                        
                                                            
                                                                                                                            
                                                            
                                                            
                                                        
                                                    
                                                 
                                            
                                                                            
                                                            
                            
                            
                            
                                            
                                            
                                             
                                                
                                                    
                                                        
                                                        Suggest changes
                                                    
                                                
                                                                                                                                      
                                            
                                                     
                                                        Like Article
                                                    
                                                    
                                                        
                                                        Like
                                                    
                                                

                                            
                                            
                                            

                                            
                                            
                                                
                                                    
                                                        
                                                        Report
                                                    
                                                

                                            
                                            
                                            
                                        
                                    
                            
                                                                Java is a high level  object oriented programming language used to build applications across platforms from web and mobile apps to enterprise software  It is known for its Write Once  Run Anywhere capability  meaning code written in Java can run on any device that supports the Java Virtual Machine  JVM  Java shares similarities with other C based languages like C   and C   especially in terms of syntax and structure  Its robustness  cross platform compatibility  and strong memory management have made it a go to language for developers worldwide for over two decades This Java tutorial is designed for both beginners and experienced professionals  covering basic to advanced Java topics What is Java Used For Java is one of the most popular and widely used programming language Used to develop mobile apps  desktop apps  web apps  web servers  games  and enterprise level systems  Java was invented by James Gosling and Oracle currently owns it  JDK    is the latest version of Java   Java s syntax is similar to C C    Popular platforms like LinkedIn  Amazon  and Netflix rely on Java for their back end architecture  showcasing its stability and scalability across different environments  Popularity is so high that   Billion  devices use Java across the world  Java Hello World Program
            Java

       A Java program to print  quot Hello World quot  
public class Geeks   
    public static void main String args    
      
        System out println  quot Hello World quot    
      
 

   Output  quot Hello World quot 

Java File Naming ConventionsWhen writing a Java program  we should follow the below rules The file name must match with the public class name Java is case sensitive  so Geeks java is not equal to geeks java If a file has no  public  class  the file name can be anything but it should be matched with the primary class name Java BasicsJava basics form the foundation of your programming journey  covering essential concepts like syntax  data types  variables  loops  and conditionals  Mastering these fundamentals is key to building strong  error free Java applications What is Java Download and Install Java JDK vs JRE vs JVMIdentifiersKeywordsQuiz  Java Basics and IdentifiersData TypesVariablesOperatorsQuiz  Variables  OperatorDecision Making  if  if else  switch  break  continue  jump LoopsQuiz  Control Statements and LoopsJava MethodsJava methods are reusable blocks of code that perform specific tasks and help organize your program  They improve code readability  reduce repetition  and make debugging easier Introduction to MethodsHow to Call Methods Static Methods vs Instance MethodsAccess ModifiersCommand Line ArgumentsVariable Arguments  Varargs Quiz  MethodsJava ArraysJava arrays are containers that store multiple values of the same data type in a single variable  They provide an efficient way to manage and access collections of data using index based positions Introduction to ArraysDeclare and Initialize ArraysMulti Dimensional ArraysQuiz  Java ArraysJagged ArraysArrays ClassFinal ArraysJava Array ProgramsQuiz  Array ProgramsJava StringsJava Strings represent sequences of characters and are widely used in text processing  They are immutable  meaning once created  their values cannot be changed Introduction of StringsWhy Strings are Immutable Java nbsp String ConcatenationQuiz  String BasicsString ClassStringBuffer ClassStringBuilder ClassQuiz  String ClassesStrings vs StringBuffer vs StringBuilderJava String ProgramsJava OOPs ConceptsJava follows the Object Oriented Programming  OOP  paradigm  which organizes code into classes and objects  Core OOP principles like inheritance  encapsulation  polymorphism  and abstraction make Java modular and scalable What are OOPs Concepts Classes and ObjectsQuiz  Classes and ObjectsConstructorsQuiz  ConstructorsObject ClassAbstractionEncapsulationInheritanceQuiz  Inheritance and AbstractionPolymorphismCompile Time Polymorphism  Method Overloading Runtime Polymorphism  Method Overriding PackagesQuiz  Polymorphism and PackagesJava InterfacesJava interfaces define a contract that classes must follow  specifying method signatures without implementations  They enable abstraction and support multiple inheritance in Java through a clean  structured approach Java InterfacesInterfaces and InheritanceClass vs InterfaceQuiz  InterfacesFunctional InterfaceNested InterfaceMarker InterfaceComparator InterfaceQuiz  Interface types and ComparatorJava CollectionsJava Collections provide a framework for storing and manipulating groups of objects efficiently  It includes interfaces like List  Set  and Map  along with classes like ArrayList  HashSet  and HashMap Java Collection FrameworkCollections ClassCollection InterfaceQuiz  Collection FrameworkList InterfaceQuiz  List InterfaceArrayList ClassQuiz  ArrayListVector ClassQuiz  VectorLinkedList ClassQuiz  LinkedListStack ClassSet InterfaceHashSet ClassQuiz  Set and HashSetTreeSet ClassLinkedHashSet ClassQueue InterfacePriority Queue ClassDeque InterfaceMap InterfaceHashMap ClassLinkedHashMap ClassQuiz  Queue and Map InterfaceHashTable ClassQuiz  HashtableDictionarySortedSet InterfaceComparator InterfaceComparable InterfaceComparator vs ComparableQuiz  Comparator vs ComparableIteratorQuiz  IteratorsJava Exception Handlingava Exception Handling is a mechanism to handle runtime errors  ensuring the program runs smoothly without crashing  It uses keywords like try  catch  throw  throws  and finally to manage exceptions Java ExceptionsChecked vs Unchecked ExceptionsTry Catch BlockQuiz  Java ExceptionsFinal  Finally and FinalizeThrow and ThrowsCustomized Exception HandlingChained ExceptionsNull Pointer ExceptionsException Handling with Method OverridingQuiz  Exception HandlingJava MultithreadingJava Multithreading allows concurrent execution of two or more threads  enabling efficient CPU utilization and faster program performance  It is commonly used for tasks like parallel processing and responsive applications Introduction to Java MultithreadingThreadsThread ClassRunnable InterfaceQuiz  Thread Basics and LifecycleLifecycle and States of a ThreadMain ThreadThread Priority in MultithreadingNaming  amp  Feteching Name of Current ThreadThread start   vs Thread run   MethodThread sleep   MethodDaemon ThreadQuiz  Thread Methods and Daemon ThreadsThread SafetyThread PoolsJava File HandlingJava File Handling enables programs to create  read  write  and manipulate files stored on the system  It uses classes from the java io and java nio packages for efficient file operations File HandlingFile ClassCreate FilesRead FilesQuiz  File HandlingWrite on FilesDelete FileFileReader ClassFileWriter ClassQuiz  File WritingFilePermission ClassFileDescriptor ClassJava Streams and Lambda ExpressionsJava Streams and Lambda Expressions simplify data processing by enabling functional style operations on collections  Lambdas provide concise syntax for anonymous functions  while Streams allow efficient filtering  mapping  and reduction of data Lambda ExpressionsMethod ReferencesJava Stream   Complete TutorialQuiz  Lambda Expressions and StreamsJava   Features   Complete Tutorial Java IOJava IO  Input Output  provides a set of classes and streams to read and write data from various sources like files  consoles  and network connections  It is part of the java io package and supports both byte and character streams Introduction to Java IOReader ClassWriter ClassFileInput StreamQuiz  IO BasicsFileOutput StreamBufferedReader Input StreamBufferedReader Output streamBufferedReader vs ScannerFast I OQuiz  BufferedReader vs Scanner and Fast I OJava SynchronizationJava Synchronization is used to control access to shared resources in multithreaded environments  It ensures that only one thread can access a critical section at a time  preventing data inconsistency Java SynchronizationImportance of Thread SynchronizationMethod and Block SynchronizationQuiz  Synchronization BasicsAtomic vs Volatile vs Synchronized Local Frameworks vs Thread SynchronizationDeadlock in MultithreadingQuiz  Deadlocks and SynchronizationDeadlock Prevention and AvoidanceLock vs Monitor in ConcurrencyReentrant LockQuiz  Concurrency Locks and Reentrant LocksJava RegexJava Regex  Regular Expressions  allows pattern matching and text manipulation using the java util regex package  It is powerful for validating  searching  and replacing strings based on specific patterns What is Java Regex Pattern ClassMatcher ClassCharacter ClassQuiz  Regex Basics and Pattern MatchingQuantifiersJava NetworkingJava Networking enables communication between devices over a network using classes from the java net package  It supports protocols like TCP and UDP for building client server applications and data exchange Introduction to Java NetworkingTCP ArchitectureUDP ArchitectureIPV  vs IPV Quiz  Networking Basics and ProtocolsConnection Oriented vs Connectionless ProtocolsSocket ProgrammingServer Socket ClassQuiz  Sockets and Server CommunicationURL Class and MethodsJava Database Connectivity JDBC Introduction to Java JDBCJDBC DriverJDBC ConnectionTypes of Statements in JDBCQuiz  JDBCJava Memory AllocationJava Memory Allocation refers to how memory is assigned to variables  objects  and classes during program execution  It involves stack and heap memory  with the JVM managing allocation and garbage collection automatically Java Memory ManagementHow Java Objects Stored in Memory Quiz  Java Memory AllocationStack vs Heap Memory AllocationQuiz  Heap vs StackJava Virtual Machine JVM  Stack AreaTypes of Memory Areas Allocated by JVMGarbage CollectionQuiz  JVM Memory Management and Garbage CollectionTypes of JVM Garbage CollectorsHeap and Stack Memory AllocationMemory LeaksJava Interview QuestionsPrepare for Java interviews with these commonly asked questions  covering core concepts  OOP  collections  multithreading  exception handling  and frameworks like Spring and Hibernate      Core Java Interview Questions and AnswersJava MCQBest Approach to Learn JavaHere s the step by step approach to learn and master Java efficiently and effectively    Understand Java Fundamentals  Start with the basics  what Java is  how it works  JVM  JRE  JDK   and why it s platform independent  Learn about Java s role in building desktop  web  and mobile applications    Set Up the Java Environment  Install the latest JDK and configure your development environment  Use a beginner friendly IDE like IntelliJ IDEA  Eclipse  or VS Code for writing and testing your code    Learn Core Java Concepts  Focus on essential topics like variables  data types  operators  control structures  if else  switch  loops   and input output  Practice writing simple programs to strengthen your understanding    Master Object Oriented Programming  OOP   Dive into the pillars of OOP classes  objects  inheritance  polymorphism  encapsulation  and abstraction  Understand how Java handles these concepts and how to apply them effectively in real projects    Explore Collections and Data Structures  Learn about Java s Collection Framework ArrayList  HashMap  Set  LinkedList  and more  Understand how to use them and when to choose one over the other    Work with Exception Handling  Understand the importance of error handling in Java using try catch blocks  finally  throw  and custom exceptions  Learn best practices for writing clean  safe code    Get Comfortable with File I O  Learn how Java reads from and writes to files using File  FileReader  BufferedReader  FileWriter  and Streams  Practice creating programs that manage and manipulate file data    Understand Multithreading and Concurrency  Grasp the basics of threads  synchronization  and concurrent programming  Learn how Java handles multiple tasks simultaneously using the Thread class and ExecutorService    Learn Java Libraries and APIs  Familiarize yourself with essential APIs like Java Math  Date  amp  Time  java time   and String manipulation  Explore popular libraries like Apache Commons  Gson  or Jackson for real world development     Build Real World Projects  Apply your knowledge by building console apps  file management systems  or basic desktop GUIs using JavaFX or Swing  Gradually move into web development with Java Servlets  JSP  or Spring Boot Java Program ExamplesJava Programming ExamplesJava Exercises   Basic to Advanced Java Practice ProgramsJava Coding Practice ProblemsJava Fundamentals Coding Practice ProblemsJava Methods Coding Practice ProblemsJava Arrays Coding Practice ProblemsJava Strings Coding Practice ProblemsJava OOPs Coding Practice ProblemsJava Sorting and Searching Algorithms Coding Practice ProblemsJava Collections Coding Practice ProblemsJava Stream  amp  Lambda Expression Coding Practice ProblemsJava Quizzes and MCQsJava Language MCQs with AnswersImportant Java ProjectsNumber Guessing GameSimple Banking ApplicationCurrency ConverterTic Tac Toe GameSnake GameMemory GameChat ApplicationFace Detection SystemSocial Networking SiteText EditorCareer  amp  Jobs in Java     Java opens doors to a wide range of tech careers across industries from enterprise software to mobile apps and cloud systems  Here s a list of top career options for professionals with Java expertise  along with their average salary ranges CareerAverage Salary  INR  Per AnnumAverage Salary  USD  Per AnnumJava Developer                                       Full Stack Java Developer                                       Backend Engineer  Java                                        Android Developer  Java Kotlin                                        Java Architect                                          DevOps Engineer  Java projects                                        Big Data Engineer  Java   Hadoop                                           Automation Test Engineer  Java   Selenium                                        Software Engineer  Java Spring Boot                                        Java Consultant   Technical Lead                                          List of Companies Using JavaThese are some popular companies that use Java in thier workflow CompanyDescriptionGoogleUses Java for Android development  backend services  and internal tools across products like Gmail and Google Drive AmazonJava is widely used at Amazon for building scalable backend systems  AWS services  and e commerce infrastructure NetflixJava powers many of Netflix s backend microservices  helping deliver content to millions of users with high availability SpotifyRelies on Java for data processing  backend APIs  and scalable microservices that support music streaming AirbnbUses Java in its backend systems to handle listings  payments  and user interactions at scale UberEmploys Java for real time dispatch systems  geolocation services  and backend microservices LinkedInJava is a core language for building LinkedIn s backend architecture  handling data intensive workloads and APIs eBayUses Java for high traffic applications  auction management  and payment services NASAImplements Java in various projects  including simulations  data analysis tools  and mission critical software IntelUses Java in embedded systems  performance testing tools  and internal applications across chip development 
                            
                            
                        
                                                                              
                                        
                                                                                
                                                                
                            
    
        
        
        Comment
    More infoAdvertise with us                                
                                
                                        Next Article
                                        
                                    
                                    
                                    
                                        Introduction to Java
                                    
                                
                                                        
                        
                            
                                        
                                            
                                                
                                                
                                                    
        
            
        
        
                                                
                                                
                                                    kartik                                                
                                                
                                                
            
            

 Follow                                            
                                            
                                        
                                        
                                            
                                            
                                                
                                                
                                                    
                                                    
                                                
                                            
                                            
                                                                            
                                    Improve
                                    
                                
                            
                                        
                        
                        
                                                            
                                    Article Tags   
                                    
                                        
            
                Java
            
            
                Tutorials
                                                
                                                                    
                                                                                        
                                    Practice Tags   
                                    
                                        Java