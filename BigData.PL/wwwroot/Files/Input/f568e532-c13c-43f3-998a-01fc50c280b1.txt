Subfield of computer science and logic
In computer science  in particular in knowledge representation and reasoning and metalogic  the area of automated reasoning is dedicated to understanding different aspects of reasoning  The study of automated reasoning helps produce computer programs that allow computers to reason completely  or nearly completely  automatically  Although automated reasoning is considered a sub field of artificial intelligence  it also has connections with theoretical computer science and philosophy 
The most developed subareas of automated reasoning are automated theorem proving  and the less automated but more pragmatic subfield of interactive theorem proving  and automated proof checking  viewed as guaranteed correct reasoning under fixed assumptions       citation needed      Extensive work has also been done in reasoning by analogy using induction and abduction            
Other important topics include reasoning under uncertainty and non monotonic reasoning  An important part of the uncertainty field is that of argumentation  where further constraints of minimality and consistency are applied on top of the more standard automated deduction  John Pollock s OSCAR system is an example of an automated argumentation system that is more specific than being just an automated theorem prover 
Tools and techniques of automated reasoning include the classical logics and calculi  fuzzy logic  Bayesian inference  reasoning with maximal entropy and many less formal ad hoc techniques 


Early years edit 
The development of formal logic played a big role in the field of automated reasoning  which itself led to the development of artificial intelligence  A formal proof is a proof in which every logical inference has been checked back to the fundamental axioms of mathematics  All the intermediate logical steps are supplied  without exception  No appeal is made to intuition  even if the translation from intuition to logic is routine  Thus  a formal proof is less intuitive and less susceptible to logical errors            
Some consider the Cornell Summer meeting of       which brought together many logicians and computer scientists  as the origin of automated reasoning  or automated deduction             Others say that it began before that with the      Logic Theorist program of Newell  Shaw and Simon  or with Martin Davis       implementation of Presburger s decision procedure  which proved that the sum of two even numbers is even             
Automated reasoning  although a significant and popular area of research  went through an  AI winter  in the eighties and early nineties  The field subsequently revived  however  For example  in       Microsoft started using verification technology in many of their internal projects and is planning to include a logical specification and checking language in their      version of Visual C            

Significant contributions edit 
Principia Mathematica was a milestone work in formal logic written by Alfred North Whitehead and Bertrand Russell  Principia Mathematica   also meaning Principles of Mathematics   was written with a purpose to derive all or some of the mathematical expressions  in terms of symbolic logic  Principia Mathematica was initially published in three volumes in            and                 
Logic Theorist  LT  was the first ever program developed in      by Allen Newell  Cliff Shaw and Herbert A  Simon to  mimic human reasoning  in proving theorems and was demonstrated on fifty two theorems from chapter two of Principia Mathematica  proving thirty eight of them             In addition to proving the theorems  the program found a proof for one of the theorems that was more elegant than the one provided by Whitehead and Russell  After an unsuccessful attempt at publishing their results  Newell  Shaw  and Herbert reported in their publication in       The Next Advance in Operation Research 

 There are now in the world machines that think  that learn and that create  Moreover  their ability to do these things is going to increase rapidly until  in a visible future  the range of problems they can handle will be co  extensive with the range to which the human mind has been applied              
Examples of Formal Proofs




Year
Theorem
Proof System
Formalizer
Traditional Proof


    
First Incompleteness
Boyer Moore
Shankar           
G del


    
Quadratic Reciprocity
Boyer Moore
Russinoff           
Eisenstein


    
Fundamental  of Calculus
HOL Light
Harrison
Henstock


    
Fundamental  of Algebra
Mizar
Milewski
Brynski


    
Fundamental  of Algebra
Coq
Geuvers et al 
Kneser


    
Four Color
Coq
Gonthier
Robertson et al 


    
Prime Number
Isabelle
Avigad et al 
Selberg Erd s


    
Jordan Curve
HOL Light
Hales
Thomassen


    
Brouwer Fixed Point
HOL Light
Harrison
Kuhn


    
Flyspeck  
Isabelle
Bauer  Nipkow
Hales


    
Cauchy Residue
HOL Light
Harrison
Classical


    
Prime Number
HOL Light
Harrison
Analytic proof


    
Feit Thompson
Coq
Gonthier et al             
Bender  Glauberman and Peterfalvi


    
Boolean Pythagorean triples problem
Formalized as SAT
Heule et al             
None

Proof systems edit 
Boyer Moore Theorem Prover  NQTHM 
The design of NQTHM was influenced by John McCarthy and Woody Bledsoe  Started in      at Edinburgh  Scotland  this was a fully automatic theorem prover built using Pure Lisp  The main aspects of NQTHM were 
the use of Lisp as a working logic 
the reliance on a principle of definition for total recursive functions 
the extensive use of rewriting and  symbolic evaluation  
an induction heuristic based the failure of symbolic evaluation                         
HOL Light
Written in OCaml  HOL Light is designed to have a simple and clean logical foundation and an uncluttered implementation  It is essentially another proof assistant for classical higher order logic             
Coq
Developed in France  Coq is another automated proof assistant  which can automatically extract executable programs from specifications  as either Objective CAML or Haskell source code  Properties  programs and proofs are formalized in the same language called the Calculus of Inductive Constructions  CIC              
Applications edit 
Automated reasoning has been most commonly used to build automated theorem provers  Oftentimes  however  theorem provers require some human guidance to be effective and so more generally qualify as proof assistants  In some cases such provers have come up with new approaches to proving a theorem  Logic Theorist is a good example of this  The program came up with a proof for one of the theorems in Principia Mathematica that was more efficient  requiring fewer steps  than the proof provided by Whitehead and Russell  Automated reasoning programs are being applied to solve a growing number of problems in formal logic  mathematics and computer science  logic programming  software and hardware verification  circuit design  and many others  The TPTP  Sutcliffe and Suttner       is a library of such problems that is updated on a regular basis  There is also a competition among automated theorem provers held regularly at the CADE conference  Pelletier  Sutcliffe and Suttner        the problems for the competition are selected from the TPTP library             

See also edit 
Automated machine learning  AutoML 
Automated theorem proving
Reasoning system
Semantic reasoner
Program analysis  computer science 
Applications of artificial intelligence
Outline of artificial intelligence
Casuistry   Case based reasoning
Abductive reasoning
Inference engine
Commonsense reasoning
Conferences and workshops edit 
International Joint Conference on Automated Reasoning  IJCAR 
Conference on Automated Deduction  CADE 
International Conference on Automated Reasoning with Analytic Tableaux and Related Methods
Journals edit 
Journal of Automated Reasoning
Communities edit 
Association for Automated Reasoning  AAR 
References edit 

  Defourneaux  Gilles  and Nicolas Peltier   Analogy and abduction in automated deduction   IJCAI           

  C  Hales  Thomas  Formal Proof   University of Pittsburgh  Retrieved on           

  a b  Automated Deduction  AD     The Nature of PRL Project   Retrieved on           

  Martin Davis          The Prehistory and Early History of Automated Deduction   In J rg Siekmann  G  Wrightson  eds    Automation of Reasoning             Classical Papers on Computational Logic                  Heidelberg  Springer  pp             ISBN                         Here  p   

   Principia Mathematica   at Stanford University  Retrieved           

   The Logic Theorist and its Children   Retrieved           

  Shankar  Natarajan Little Engines of Proof  Computer Science Laboratory  SRI International  Retrieved           

  Shankar  N          Metamathematics  Machines  and G del s Proof  Cambridge  UK  Cambridge University Press  ISBN                   

  Russinoff  David M           A Mechanical Proof of Quadratic Reciprocity   J  Autom  Reason                doi         BF          S CID              

  Gonthier  G   et      al           A Machine Checked Proof of the Odd Order Theorem   PDF   in Blazy  S   Paulin Mohring  C   Pichardie  D   eds    Interactive Theorem Proving  Lecture Notes in Computer Science  vol             pp                CiteSeerX                       doi                               ISBN                         S CID             

  Heule  Marijn J  H   Kullmann  Oliver  Marek  Victor W           Solving and Verifying the Boolean Pythagorean Triples Problem via Cube and Conquer   Theory and Applications of Satisfiability Testing   SAT       Lecture Notes in Computer Science  Vol             pp                arXiv             doi                               ISBN                         S CID              

  The Boyer Moore Theorem Prover Retrieved on           

  Boyer  Robert S  and Moore  J Strother and Passmore  Grant Olney The PLTP Archive  Retrieved on           

  Harrison  John HOL Light  an overview  Retrieved           

  Introduction to Coq  Retrieved           

  Automated Reasoning  Stanford Encyclopedia  Retrieved           


External links edit 
International Workshop on the Implementation of Logics
Workshop Series on Empirically Successful Topics in Automated Reasoning
vteKnowledge representation and reasoning
Backward chaining
Case based reasoning
Commonsense reasoning
Forward chaining
Model based reasoning
Inference engines
Proof assistants
Knowledge engineering
Expert systems
CLIPS
Connectionist expert systems
Expert systems for mortgages
Legal expert systems
Reasoning systems
Theorem provers
Constraint solvers
Deductive classifiers
Logic programs
Procedural reasoning systems
Rule engines
Ontology languages
Attempto Controlled English
CycL
F logic
FO   
Knowledge Interchange Format
Web Ontology Language
Theorem provers
CARINE
E
Nqthm
Otter
Paradox
Prover 
SPASS
TPS
Z 
Constraint satisfaction
Constraint programming
Constraint logic programming
Local consistency
SMT solvers
Automated planning
Motion planning
Multi agent planning
Partial order planning
Preference based planning
Reactive planning
State space planning






Retrieved from  https   en wikipedia org w index php title Automated reasoning amp oldid