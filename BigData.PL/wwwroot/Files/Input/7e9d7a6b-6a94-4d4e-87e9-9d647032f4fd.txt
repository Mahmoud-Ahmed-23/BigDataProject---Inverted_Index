Instructions a computer can execute
For other uses  see Software  disambiguation  



Software written in the JavaScript language
Software consists of computer programs that instruct the execution of a computer             Software also includes design documents and specifications 
The history of software is closely tied to the development of digital computers in the mid   th century  Early programs were written in the machine language specific to the hardware  The introduction of high level programming languages in      allowed for more human readable instructions  making software development easier and more portable across different computer architectures  Software in a programming language is run through a compiler or interpreter to execute on the architecture s hardware  Over time  software has become complex  owing to developments in networking  operating systems  and databases 
Software can generally be categorized into two main types 

operating systems  which manage hardware resources and provide services for applications
application software  which performs specific tasks for users
The rise of cloud computing has introduced the new software delivery model Software as a Service  SaaS   In SaaS  applications are hosted by a provider and accessed over the Internet 
The process of developing software involves several stages  The stages include software design  programming  testing  release  and maintenance  Software quality assurance and security are critical aspects of software development  as bugs and security vulnerabilities can lead to system failures and security breaches  Additionally  legal issues such as software licenses and intellectual property rights play a significant role in the distribution of software products 


History
Main article  History of software
The integrated circuit is an essential invention to produce modern software systems            
The first use of the word software to describe computer programs is credited to mathematician John Wilder Tukey in                 
The first programmable computers  which appeared at the end of the     s             were programmed in machine language  Machine language is difficult to debug and not portable across different computers             Initially  hardware resources were more expensive than human resources             As programs became complex  programmer productivity became the bottleneck  The introduction of high level programming languages in      hid the details of the hardware and expressed the underlying algorithms into the code                         Early languages include Fortran  Lisp  and COBOL            

Types
See also  Software categories
A diagram showing how the user interacts with application software on a typical desktop computer  The application software layer interfaces with the operating system  which in turn communicates with the hardware  The arrows indicate information flow 
There are two main types of software 

Operating systems are  the layer of software that manages a computer s resources for its users and their applications              There are three main purposes that an operating system fulfills             
Allocating resources between different applications  deciding when they will receive central processing unit  CPU  time or space in memory             
Providing an interface that abstracts the details of accessing hardware details  like physical memory  to make things easier for programmers                         
Offering common services  such as an interface for accessing network and disk devices  This enables an application to be run on different hardware without needing to be rewritten             
Application software runs on top of the operating system and uses the computer s resources to perform a task              There are many different types of application software because the range of tasks that can be performed with modern computers is so large              Applications account for most software             and require the environment provided by an operating system  and often other applications  in order to function             
Comparison of on premise hardware and software  infrastructure as a service  IaaS   platform as a service  PaaS   and software as a service  SaaS 
Software can also be categorized by how it is deployed  Traditional applications are purchased with a perpetual license for a specific version of the software  downloaded  and run on hardware belonging to the purchaser               The rise of the Internet and cloud computing enabled a new model  software as a service  SaaS               in which the provider hosts the software  usually built on top of rented infrastructure or platforms              and provides the use of the software to customers  often in exchange for a subscription fee              By       SaaS products which are usually delivered via a web application had become the primary method that companies deliver applications             

Software development and maintenance
Diagram for a traditional software development life cycle from       The numbers represent the typical cost of each phase 
Software companies aim to deliver a high quality product on time and under budget  A challenge is that software development effort estimation is often inaccurate              Software development begins by conceiving the project  evaluating its feasibility  analyzing the business requirements  and making a software design                          Most software projects speed up their development by reusing or incorporating existing software  either in the form of commercial off the shelf  COTS  or open source software                          Software quality assurance is typically a combination of manual code review by other engineers             and automated software testing  Due to time constraints  testing cannot cover all aspects of the software s intended functionality  so developers often focus on the most critical functionality              Formal methods are used in some safety critical systems to prove the correctness of code              while user acceptance testing helps to ensure that the product meets customer expectations              There are a variety of software development methodologies  which vary from completing all steps in order to concurrent and iterative models              Software development is driven by requirements taken from prospective users  as opposed to maintenance  which is driven by events such as a change request             
Frequently  software is released in an incomplete state when the development team runs out of time or funding              Despite testing and quality assurance  virtually all software contains bugs where the system does not work as intended  Post release software maintenance is necessary to remediate these bugs when they are found and keep the software working as the environment changes over time              New features are often added after the release  Over time  the level of maintenance becomes increasingly restricted before being cut off entirely when the product is withdrawn from the market              As software ages  it becomes known as legacy software and can remain in use for decades  even if there is no one left who knows how to fix it              Over the lifetime of the product  software maintenance is estimated to comprise    percent or more of the total development cost                         
Completing a software project involves various forms of expertise  not just in software programmers but also testing  documentation writing  project management  graphic design  user experience  user support  marketing  and fundraising                                     

Quality and security
Main articles  Software quality and Computer security
Software quality is defined as meeting the stated requirements as well as customer expectations              Quality is an overarching term that can refer to a code s correct and efficient behavior  its reusability and portability  or the ease of modification              It is usually more cost effective to build quality into the product from the beginning rather than try to add it later in the development process              Higher quality code will reduce lifetime cost to both suppliers and customers as it is more reliable and easier to maintain                          Software failures in safety critical systems can be very serious including death              By some estimates  the cost of poor quality software can be as high as    to    percent of sales               Despite developers  goal of delivering a product that works entirely as intended  virtually all software contains bugs             
The rise of the Internet also greatly increased the need for computer security as it enabled malicious actors to conduct cyberattacks remotely                          If a bug creates a security risk  it is called a vulnerability                           Software patches are often released to fix identified vulnerabilities  but those that remain unknown  zero days  as well as those that have not been patched are still liable for exploitation              Vulnerabilities vary in their ability to be exploited by malicious actors              and the actual risk is dependent on the nature of the vulnerability as well as the value of the surrounding system               Although some vulnerabilities can only be used for denial of service attacks that compromise a system s availability  others allow the attacker to inject and run their own code  called malware   without the user being aware of it              To thwart cyberattacks  all software in the system must be designed to withstand and recover from external attack              Despite efforts to ensure security  a significant fraction of computers are infected with malware             

Encoding and execution
Programming languages
Main article  Programming language
The source code for a computer program in C  The gray lines are comments that explain the program to humans  When compiled and run  it will give the output  Hello  world   
Programming languages are the format in which software is written  Since the     s  thousands of different programming languages have been invented  some have been in use for decades  while others have fallen into disuse              Some definitions classify machine code the exact instructions directly implemented by the hardware and assembly language a more human readable alternative to machine code whose statements can be translated one to one into machine code as programming languages              Programs written in the high level programming languages used to create software share a few main characteristics  knowledge of machine code is not necessary to write them  they can be ported to other computer systems  and they are more concise and human readable than machine code              They must be both human readable and capable of being translated into unambiguous instructions for computer hardware             

Compilation   interpretation  and execution
The invention of high level programming languages was simultaneous with the compilers needed to translate them automatically into machine code              Most programs do not contain all the resources needed to run them and rely on external libraries  Part of the compiler s function is to link these files in such a way that the program can be executed by the hardware  Once compiled  the program can be saved as an object file and the loader  part of the operating system  can take this saved file and execute it as a process on the computer hardware              Some programming languages use an interpreter instead of a compiler  An interpreter converts the program into machine code at run time  which makes them    to     times slower than compiled programming languages                         

Legal issues
Liability
Main article  Software product liability
Software is often released with the knowledge that it is incomplete or contains bugs  Purchasers knowingly buy it in this state  which has led to a legal regime where liability for software products is significantly curtailed compared to other products             

Licenses
Main articles  Software license and Software copyright
Blender  a free software program
Since the mid     s  software and its source code have been protected by copyright law that vests the owner with the exclusive right to copy the code  The underlying ideas or algorithms are not protected by copyright law  but are sometimes treated as a trade secret and concealed by such methods as non disclosure agreements              A software copyright is often owned by the person or company that financed or made the software  depending on their contracts with employees or contractors who helped to write it               Some software is in the public domain and has no restrictions on who can use it  copy or share it  or modify it  a notable example is software written by the United States Government   Free and open source software also allow free use  sharing  and modification  perhaps with a few specified conditions               The use of some software is governed by an agreement  software license  written by the copyright holder and imposed on the user  Proprietary software is usually sold under a restrictive license that limits its use and sharing               Some free software licenses require that modified versions must be released under the same license  which prevents the software from being sold
or distributed under proprietary restrictions             

Patents
Main articles  Software patent and Software patent debate
Patents give an inventor an exclusive  time limited license for a novel product or process              Ideas about what software could accomplish are not protected by law and concrete implementations are instead covered by copyright law  In some countries  a requirement for the claimed invention to have an effect on the physical world may also be part of the requirements for a software patent to be held valid              Software patents have been historically controversial  Before the      case State Street Bank  amp  Trust Co  v  Signature Financial Group  Inc   software patents were generally not recognized in the United States  In that case  the Supreme Court decided that business processes could be patented              Patent applications are complex and costly  and lawsuits involving patents can drive up the cost of products              Unlike copyrights  patents generally only apply in the jurisdiction where they were issued             

Impact
Further information  Information Age
Computer generated simulations are one of the advances enabled by software             
Engineer Capers Jones writes that  computers and software are making profound changes to every aspect of human life  education  work  warfare  entertainment  medicine  law  and everything else               It has become ubiquitous in everyday life in developed countries              In many cases  software augments the functionality of existing technologies such as household appliances and elevators              Software also spawned entirely new technologies such as the Internet  video games  mobile phones  and GPS                          New methods of communication  including email  forums  blogs  microblogging  wikis  and social media  were enabled by the Internet              Massive amounts of knowledge exceeding any paper based library are now available with a quick web search              Most creative professionals have switched to software based tools such as computer aided design   D modeling  digital image editing  and computer animation              Almost every complex device is controlled by software             

References


  Stair  Ralph M          Principles of Information Systems  Sixth Edition  Thomson  p           ISBN                     Software consists of computer programs that govern the operation of the computer 

  Jones       pp              

  Tracy       p         

  Gabbrielli  amp  Martini       p           

  Gabbrielli  amp  Martini       pp               

  Gabbrielli  amp  Martini       p           

  Gabbrielli  amp  Martini       p           

  a b Tracy       p         

  Anderson  amp  Dahlin       p         

  a b c Anderson  amp  Dahlin       p         

  Tanenbaum  amp  Bos       p         

  Anderson  amp  Dahlin       pp                

  Anderson  amp  Dahlin       pp           

  Jones       p           

  Tracy       p          

  Tracy       p          

  a b O Regan       p           

  Campbell Kelly  amp  Garcia Swartz       pp               

  Rosati  amp  Lynn       p          

  Watt       p         

  O Regan       p         

  O Regan       p         

  a b Dooley       p         

  O Regan       pp                   

  Tracy       pp              

  O Regan       pp               

  O Regan       p          

  O Regan       p           

  O Regan       p          

  O Regan       p         

  Tripathy  amp  Naik       p          

  Reifer       p          

  Tripathy  amp  Naik       pp             

  Tripathy  amp  Naik       p          

  Tracy       p         

  Varga       p         

  Ulziit et al        p           

  Tucker  Morelli  amp  de Silva       p         

  Stull       pp             

  Galin       p         

  Galin       p          

  O Regan       pp               

  a b O Regan       pp              

  Varga       p          

  O Regan       p           

  Ablon  amp  Bogart       p         

  Campbell Kelly  amp  Garcia Swartz       p           

  a b O Regan       p           

  a b c Ablon  amp  Bogart       p         

  Daswani  amp  Elbayadi       p          

  Daswani  amp  Elbayadi       pp             

  Haber  amp  Hibbert       pp           

  Kitchin  amp  Dodge       p          

  Tracy       p           

  Tracy       pp               

  Tracy       pp               

  Kitchin  amp  Dodge       p          

  Tracy       p           

  Tracy       pp               

  O Regan       p           

  Sebesta       p          

  Kitchin  amp  Dodge       pp             

  O Regan       pp               

  a b O Regan       p           

  O Regan       pp                

  Langer       pp             

  O Regan       p           

  Gerardo Con D az   The Text in the Machine  American Copyright Law and the Many Natures of Software              Technology and Culture     October               

  Jones       p          

  O Regan       p           

  O Regan       p           

  a b Manovich       p           

  Jones       p          

  Kitchin  amp  Dodge       p       iv 

  a b Kitchin  amp  Dodge       p         

  a b c Jones       p       xxviii 

  Manovich       p           


Sources

Ablon  Lillian  Bogart  Andy         Zero Days  Thousands of Nights  The Life and Times of Zero Day Vulnerabilities and Their Exploits  PDF   Rand Corporation  ISBN                        
Anderson  Thomas  Dahlin  Michael         Operating Systems  Principles and Practice         ed    Recursive Books  ISBN                        
Campbell Kelly  Martin  Garcia Swartz  Daniel D          From Mainframes to Smartphones  A History of the International Computer Industry  Harvard University Press  ISBN                        
Daswani  Neil  Elbayadi  Moudy         Big Breaches  Cybersecurity Lessons for Everyone  Apress  ISBN                        
Dooley  John F          Software Development  Design and Coding  With Patterns  Debugging  Unit Testing  and Refactoring  Apress  ISBN                        
Gabbrielli  Maurizio  Martini  Simone         Programming Languages  Principles and Paradigms   nd      ed    Springer  ISBN                        
Galin  Daniel         Software Quality  Concepts and Practice  John Wiley  amp  Sons  ISBN                        
Haber  Morey J   Hibbert  Brad         Asset Attack Vectors  Building Effective Vulnerability Management Strategies to Protect Organizations  Apress  ISBN                        
Jones  Capers         The Technical and Social History of Software Engineering  Pearson Education  ISBN                        
Kitchin  Rob  Dodge  Martin         Code space  Software and Everyday Life  MIT Press  ISBN                        
Langer  Arthur M          Guide to Software Development  Designing and Managing the Life Cycle  Springer  ISBN                        
Manovich  Lev         Software Takes Command  Bloomsbury Academic  ISBN                        
O Regan  Gerard         Concise Guide to Software Engineering  From Fundamentals to Application Methods  Springer Nature  ISBN                        
Osterweil  Leon J           What Is Software  The Role of Empirical Methods in Answering the Question   Perspectives on the Future of Software Engineering  Essays in Honor of Dieter Rombach  Springer  pp                ISBN                        
Rahman  Hanif Ur  da Silva  Alberto Rodrigues  Alzayed  Asaad  Raza  Mushtaq          A Systematic Literature Review on Software Maintenance Offshoring Decisions   Information and Software Technology               doi         j infsof             
Reifer  Donald J          Software Maintenance Success Recipes  CRC Press  ISBN                        
Rosati  Pierangelo  Lynn  Theo          Measuring the Business Value of Infrastructure Migration to the Cloud   Measuring the Business Value of Cloud Computing  Springer International Publishing  pp              ISBN                        
Sebesta  Robert W          Concepts of Programming Languages          ed    Addison Wesley  ISBN                        
Stull  Edward         UX Fundamentals for Non UX Professionals  User Experience Principles for Managers  Writers  Designers  and Developers  Apress  ISBN                        
Tanenbaum  Andrew S   Bos  Herbert         Modern Operating Systems  Global Edition  Pearson Higher Ed  ISBN                        
Tracy  Kim W          Software  A Technical History  Morgan  amp  Claypool Publishers  ISBN                        
Tripathy  Priyadarshi  Naik  Kshirasagar         Software Evolution and Maintenance  A Practitioner s Approach  John Wiley  amp  Sons  ISBN                        
Tucker  Allen  Morelli  Ralph  de Silva  Chamindra         Software Development  An Open Source Approach  CRC Press  ISBN                        
Ulziit  Bayarbuyan  Warraich  Zeeshan Akhtar  Gencel  Cigdem  Petersen  Kai          A conceptual framework of challenges and solutions for managing global software maintenance   Journal of Software  Evolution and Process                    doi         smr      
Watt  Andy         Building Modern SaaS Applications with C  And   NET  Build  Deploy  and Maintain Professional SaaS Applications  Packt  ISBN                        
Varga  Ervin         Unraveling Software Maintenance and Evolution  Thinking Outside the Box  Springer  ISBN                        

vteSoftware digital distribution platforms
App store
Cloud gaming
Content delivery network
Digital library
Digital distribution of video games
Over the air update
Package manager
Software distribution
List of mobile app distribution platforms
Android
ActivePersonal  computers
Amazon Digital Game Store
Battle net
Big Fish Games
Chrome Web Store
Direct Drive
Discord
DLsite
Discover
DMM Games
EA
Epic Games Store
Flathub
GameHouse
GamersGate
Gamesplanet
Game Jolt
GOG com
Humble Store
IndieGala
itch io
MacGameStore
MacUpdate
Mac App Store
Meta Horizon Store
Microsoft Store
MSN Games
Nutaku
Pogo com
Pokki
PureOS Software Center
Robot Cache
Rockstar Games Social Club
Snap Store
Steam
Ubisoft Connect
Viveport
WeGame
WildTangent
Consoles
Microsoft Store
Nintendo eShop
PlayStation Store
Mobile  devices  
Amazon Appstore
Apple App Store
Appland
Aptoide
Cafe Bazaar
Cydia
DLsite
Epic Games Store
F Droid
Galaxy Store
GetJar
Google Play
Huawei AppGallery
Meta Horizon Store
MiKandi
Nutaku
OpenStore
PureOS Software Center
Tencent Appstore
SlideME
TapTap
Viveport
Arcade
NESiCAxLive
Defunct
Allmyapps
BlackBerry World
Club Nokia
Desura
Digital River
Download 
GameAgent
GameShadow
GameTap
Games for Windows Marketplace
Handango
Impulse
Intel AppUp
Kartridge
Kazaa
N Gage
Nokia Store
Opera Mobile Store
Playism
PlayNow Arena
RealArcade
Stardock Central
Triton
Ubuntu App Store
Ubuntu Software Center
Vodafone live 
Wii Shop Channel
Windows Marketplace
Windows Marketplace for Mobile
Windows Phone Store
Xbox Games Store
Xbox Live Arcade
Yahoo  Games
Zune Marketplace

  Also includes Smart TVs and standalone VR headsets 
      Category
      Portal

Portal  Free and open source softwareSoftware at Wikipedia s sister projects Media from CommonsNews from WikinewsQuotations from WikiquoteTextbooks from WikibooksResources from Wikiversity
Authority control databases  National GermanyUnited StatesFranceBnF dataJapanCzech RepublicSpainIsrael





Retrieved from  https   en wikipedia org w index php title Software amp oldid